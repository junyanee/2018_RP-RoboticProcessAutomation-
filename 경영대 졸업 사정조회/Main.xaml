<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:cv="clr-namespace:CustomActivities.VariableComparer;assembly=CustomActivities.VariableComparer"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>CustomActivities.VariableComparer</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>CustomActivities.VariableComparer</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="경영대학교 졸업사정조회" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="ui:GenericValue" Name="studentCode" />
      <Variable x:TypeArguments="ui:GenericValue" Name="password" />
      <Variable x:TypeArguments="x:String" Name="lanCredit" />
      <Variable x:TypeArguments="x:String" Name="yearCode" />
      <Variable x:TypeArguments="sd:DataTable" Name="TOTAL" />
      <Variable x:TypeArguments="sd:DataTable" Name="NEED" />
      <Variable x:TypeArguments="x:String" Name="error1" />
      <Variable x:TypeArguments="sd:DataTable" Name="Credit" />
      <Variable x:TypeArguments="sd:DataTable" Name="Cre_Eng" />
      <Variable x:TypeArguments="sd:DataTable" Name="Cre_Eng_Lan" />
      <Variable x:TypeArguments="sd:DataTable" Name="grade2" />
      <Variable x:TypeArguments="ui:GenericValue" Name="test12" />
      <Variable x:TypeArguments="ui:GenericValue" Name="login" />
      <Variable x:TypeArguments="x:String" Name="test" />
      <Variable x:TypeArguments="sd:DataTable" Name="test1" />
      <Variable x:TypeArguments="sd:DataTable" Name="test2" />
      <Variable x:TypeArguments="x:String" Name="major" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="공통필수수강" Name="sub_in_pri" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="공통핵심교양" Name="sub_in_pri1" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="전공필수과목" Name="sub_in_pri2" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_8">
        <TryCatch DisplayName="종합정보시스템 접속" sap2010:WorkflowViewState.IdRef="TryCatch_2">
          <TryCatch.Try>
            <ui:OpenBrowser UiBrowser="{x:Null}" BrowserType="IE" DisplayName="종합정보 시스템 접속" Hidden="False" sap2010:WorkflowViewState.IdRef="OpenBrowser_2" NewSession="True" Private="False" Url="https://sso.mju.ac.kr/swift/login/login_myiweb.jsp?RSP=myiweb.mju.ac.kr&amp;RelayState=index_SSO.jsp">
              <ui:OpenBrowser.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                </ActivityAction>
              </ui:OpenBrowser.Body>
            </ui:OpenBrowser>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_7">
            <TryCatch DisplayName="개인정보입력" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <Sequence DisplayName="개인정보 입력" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap2010:WorkflowViewState.IdRef="InputDialog_3" IsPassword="False" Label="본인의 종합정보시스템 로그인 학번을 입력하시오." Title="학번입력">
                    <ui:InputDialog.Result>
                      <OutArgument x:TypeArguments="ui:GenericValue">[studentCode]</OutArgument>
                    </ui:InputDialog.Result>
                  </ui:InputDialog>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[yearCode]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[studentCode.Substring(2,2).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회&quot;]" />
                  <ui:InputDialog Options="{x:Null}" DisplayName="Private: Input Dialog" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="True" Label="본인의 종합정보시스템 비밀번호를 입력하시오." Title="비밀번호 입력">
                    <ui:InputDialog.Result>
                      <OutArgument x:TypeArguments="ui:GenericValue">[password]</OutArgument>
                    </ui:InputDialog.Result>
                  </ui:InputDialog>
                  <ui:MessageBox Caption="{x:Null}" Buttons="YesNo" ChosenButton="[lanCredit]" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_29" Text="어학 졸업 기준 점수를 충족하십니까?&#xA;*어학기준점수&#xA;TOEIC 700&#xA;TOEIC SPEAKING 130&#xA;IELTS 6&#xA;TEPS 580&#xA;OPIC IH이상&#xA;TOEFL(PBT 540 / CBT 207 / IBT 76)&#xA;중 한가지 이상" TopMost="True" />
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_83">
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_15" Text="2" TopMost="True" />
                      <ui:GetValue ContinueOnError="{x:Null}" Value="{x:Null}" DisplayName="Get Text" sap2010:WorkflowViewState.IdRef="GetValue_31">
                        <ui:GetValue.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                        </ui:GetValue.Target>
                      </ui:GetValue>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_17">
                <TryCatch DisplayName="졸업학점조회 확인 및 수강내역확인" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                  <TryCatch.Try>
                    <Sequence DisplayName="졸업학점조회 확인" sap2010:WorkflowViewState.IdRef="Sequence_16">
                      <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into 'INPUT  userID'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_5" SendWindowMessages="False" SimulateType="False" Text="[studentCode]">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="98b0d964f0f5bc9909d01164e056851c" Selector="&lt;html title='SSO 통합 로그인' /&gt;&lt;webctrl id='userID' tag='INPUT' /&gt;" WaitForReady="INTERACTIVE" />
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into 'INPUT  userPW'" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_6" SendWindowMessages="False" SimulateType="False" Text="[password + &quot;[k(enter)]&quot;]">
                          <ui:TypeInto.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="567249619e3ff8e180f2e57773b5add9" Selector="&lt;html title='SSO 통합 로그인' /&gt;&lt;webctrl id='userPW' tag='INPUT' /&gt;" WaitForReady="INTERACTIVE" />
                          </ui:TypeInto.Target>
                        </ui:TypeInto>
                        <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                          <ui:Click.CursorPosition>
                            <ui:CursorPosition Position="Center">
                              <ui:CursorPosition.OffsetX>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetX>
                              <ui:CursorPosition.OffsetY>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:CursorPosition.OffsetY>
                            </ui:CursorPosition>
                          </ui:Click.CursorPosition>
                          <ui:Click.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="012d904b8fc8270a21e97fcce561fe75" Selector="&lt;wnd app='iexplore.exe' cls='#32770' title='웹 페이지 메시지' /&gt;&lt;wnd ctrlid='2' title='확인' /&gt;" WaitForReady="INTERACTIVE" />
                          </ui:Click.Target>
                        </ui:Click>
                        <Sequence DisplayName="수강내역확인" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'B'" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="f4d1c7bb3ada2394a7bde85b162d14d6" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl parentid='C_102' tag='B' /&gt;" WaitForReady="INTERACTIVE" />
                            </ui:Click.Target>
                          </ui:Click>
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'FONT'" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="4ab5f562cc5e391eac30ef1d9f324529" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl aaname='졸업학점조회' parentid='T_102' tag='FONT' /&gt;" WaitForReady="INTERACTIVE" />
                            </ui:Click.Target>
                          </ui:Click>
                        </Sequence>
                      </Sequence>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <ui:MessageBox Caption="{x:Null}" Buttons="Ok" ChosenButton="[error1]" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_21" Text="아이디나 패스워드를 확인해주세요" TopMost="True" />
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID11" Condition="[error1 = &quot;Ok&quot;]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID19" sap2010:WorkflowViewState.IdRef="FlowStep_64">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[error1]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Pass</InArgument>
                          </Assign.Value>
                        </Assign>
                        <FlowStep.Next>
                          <x:Reference>__ReferenceID0</x:Reference>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                        <Sequence DisplayName="취득학점조회" sap2010:WorkflowViewState.IdRef="Sequence_11">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="uref_total" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="major_total" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="major_need" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="cref_total" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="cref_need" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="bref_total" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="bref_need" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="cha_total" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="cha_need" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="total_credit" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="need_credit" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="nref_need" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="uref_need" />
                            <Variable x:TypeArguments="sd:DataTable" Name="oeoq1" />
                            <Variable x:TypeArguments="x:String" Name="strvalue" />
                          </Sequence.Variables>
                          <Sequence DisplayName="취득학점조회" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'TD'" sap2010:WorkflowViewState.IdRef="GetOCRText_2">
                              <ui:GetOCRText.OCREngine>
                                <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                                  <ActivityFunc.Argument>
                                    <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                                  </ActivityFunc.Argument>
                                  <ui:GoogleOCR FilterRegion="{x:Null}" Text="{x:Null}" AllowedCharacters="" DeniedCharacters="" ExtractWords="False" sap2010:WorkflowViewState.IdRef="GoogleOCR_2" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="6" />
                                </ActivityFunc>
                              </ui:GetOCRText.OCREngine>
                              <ui:GetOCRText.Target>
                                <ui:Target Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="eb4b728142d0d6fc4d8abda9051ac930" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='7' tag='TBODY' /&gt;" WaitForReady="INTERACTIVE">
                                  <ui:Target.ClippingRegion>
                                    <ui:Region Rectangle="112, 17, 60, 30" />
                                  </ui:Target.ClippingRegion>
                                </ui:Target>
                              </ui:GetOCRText.Target>
                              <ui:GetOCRText.Text>
                                <OutArgument x:TypeArguments="x:String">[uref_total]</OutArgument>
                              </ui:GetOCRText.Text>
                            </ui:GetOCRText>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'TD'" sap2010:WorkflowViewState.IdRef="GetValue_14">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1677cebcfe23d33f2afde231318ae08b" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='8' tag='TABLE' /&gt;&lt;webctrl idx='1' isleaf='1' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[uref_need]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="전공누계" sap2010:WorkflowViewState.IdRef="GetValue_15">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a4715a1408bbf16eb2b274b389fb5366" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='7' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableCol='2' tableRow='3' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[major_total]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="전공필요학점" sap2010:WorkflowViewState.IdRef="GetValue_16">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9f54aad79dc0a942fc1ba1e1d4bb940f" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='8' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableCol='2' tableRow='3' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[major_need]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="핵심교양누계" sap2010:WorkflowViewState.IdRef="GetValue_17">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a5cf54e38713fda5e25d73adfd8279f2" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='7' tag='TABLE' /&gt;&lt;webctrl idx='1' isleaf='1' tableCol='4' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[cref_total]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="핵심교양필요학점" sap2010:WorkflowViewState.IdRef="GetValue_18">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="41fda5515d7a77468920c15312387562" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='8' tag='TABLE' /&gt;&lt;webctrl idx='1' isleaf='1' tableCol='4' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[cref_need]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="학문기초교양 누계" sap2010:WorkflowViewState.IdRef="GetValue_19">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="debd80040b2d42e921fa9a09ea36565d" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='7' tag='TABLE' /&gt;&lt;webctrl idx='1' isleaf='1' tableCol='6' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[bref_total]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="학문기초교양 필요학점" sap2010:WorkflowViewState.IdRef="GetValue_20">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7ea575705b1355c8346e06f9a2e52466" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='8' tag='TABLE' /&gt;&lt;webctrl idx='1' isleaf='1' tableCol='6' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[bref_need]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="채플이수 누계" sap2010:WorkflowViewState.IdRef="GetValue_21">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="b1449e1c5e02fa124ea72fc10bf26e97" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='7' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableCol='6' tableRow='4' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[cha_total]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="채플 총 필요이수" sap2010:WorkflowViewState.IdRef="GetValue_22">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ea75320629950e1012aa59a42aeeb803" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='8' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableCol='6' tableRow='3' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[cha_need]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="총취득학점" sap2010:WorkflowViewState.IdRef="GetValue_23">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="fd0ab34a651280c1743e6d3e6e8f1f2c" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='7' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableCol='8' tableRow='4' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[total_credit]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="졸업학점" sap2010:WorkflowViewState.IdRef="GetValue_24">
                              <ui:GetValue.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a557bc4aa771681e77e02d4b6e0e7abc" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='8' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableCol='8' tableRow='3' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                              </ui:GetValue.Target>
                              <ui:GetValue.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[need_credit]</OutArgument>
                              </ui:GetValue.Value>
                            </ui:GetValue>
                          </Sequence>
                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="취득학점 작성" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강,필요학점&quot;]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_26">
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
                                    <Sequence DisplayName="총취득학점 작성" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                      <ui:ExcelWriteCell Cell="C1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Sheet1" Text="수강학점" />
                                      <ui:ExcelWriteCell Cell="C2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Sheet1" Text="[uref_total]" />
                                      <ui:ExcelWriteCell Cell="C3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Sheet1" Text="[major_total]" />
                                      <ui:ExcelWriteCell Cell="C4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Sheet1" Text="[cref_total]" />
                                      <ui:ExcelWriteCell Cell="C5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="Sheet1" Text="[bref_total]" />
                                      <ui:ExcelWriteCell Cell="C6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Sheet1" Text="[cha_total]" />
                                      <ui:ExcelWriteCell Cell="C7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Sheet1" Text="[total_credit]" />
                                    </Sequence>
                                    <Sequence DisplayName="졸업필요학점 작성" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                      <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_45" SheetName="Sheet1" Text="구분" />
                                      <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_46" SheetName="Sheet1" Text="공통교양" />
                                      <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_47" SheetName="Sheet1" Text="전공" />
                                      <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_48" SheetName="Sheet1" Text="핵심교양" />
                                      <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_49" SheetName="Sheet1" Text="학문기초교양" />
                                      <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_50" SheetName="Sheet1" Text="채플" />
                                      <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_51" SheetName="Sheet1" Text="총학점" />
                                      <ui:ExcelWriteCell Cell="B1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_31" SheetName="Sheet1" Text="졸업필요학점" />
                                      <ui:ExcelWriteCell Cell="B2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_32" SheetName="Sheet1" Text="[uref_need]" />
                                      <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_33" SheetName="Sheet1" Text="[major_need]" />
                                      <ui:ExcelWriteCell Cell="B4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_34" SheetName="Sheet1" Text="[cref_need]" />
                                      <ui:ExcelWriteCell Cell="B5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_35" SheetName="Sheet1" Text="[bref_need]" />
                                      <ui:ExcelWriteCell Cell="B6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_36" SheetName="Sheet1" Text="[cha_need]" />
                                      <ui:ExcelWriteCell Cell="B7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_37" SheetName="Sheet1" Text="[need_credit]" />
                                    </Sequence>
                                    <ui:ExcelReadRange AddHeaders="True" DataTable="[TOTAL]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="C1:C6" SheetName="Sheet1" />
                                    <ui:ExcelReadRange AddHeaders="True" DataTable="[NEED]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="B1:B6" SheetName="Sheet1" />
                                  </Sequence>
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_21">
                            <Flowchart DisplayName="취득학점 비교" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                              <Flowchart.Variables>
                                <Variable x:TypeArguments="ui:GenericValue" Name="TtbNoRows" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="NtbNoRows" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="TtbNoColumns" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="NtbNoColumns" />
                                <Variable x:TypeArguments="x:Boolean" Name="found" />
                              </Flowchart.Variables>
                              <Flowchart.StartNode>
                                <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_26">
                                  <Sequence DisplayName="행열 확인" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                    <Assign DisplayName="TOTAL테이블 열 갯수 가지고오기" sap2010:WorkflowViewState.IdRef="Assign_6">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[TtbNoRows]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:GenericValue">[TOTAL.Rows.Count]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="NEED테이블 열 갯수 가지고오기" sap2010:WorkflowViewState.IdRef="Assign_7">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[NtbNoRows]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:GenericValue">[NEED.Rows.Count]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="TOTAL테이블 행 갯수 가지고오기" sap2010:WorkflowViewState.IdRef="Assign_8">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[TtbNoColumns]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:GenericValue">[TOTAL.Columns.Count]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="NEED테이블 행 갯수 가지고오기" sap2010:WorkflowViewState.IdRef="Assign_9">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[NtbNoColumns]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:GenericValue">[NEED.Columns.Count]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <FlowStep.Next>
                                    <FlowDecision x:Name="__ReferenceID2" Condition="[TtbNoColumns=NtbNoColumns and TtbNoRows=NtbNoRows]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                      <FlowDecision.True>
                                        <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_24">
                                          <Sequence DisplayName="테이블 행열비교" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:Int32" Name="rowindex" />
                                            </Sequence.Variables>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Int32">[rowindex]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[found]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <While sap2010:WorkflowViewState.IdRef="While_2" Condition="[rowindex&lt;TtbNoRows and (not found)]">
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:Int32" Name="columnindex" />
                                                </Sequence.Variables>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[columnindex]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <While sap2010:WorkflowViewState.IdRef="While_1" Condition="[columnindex&lt;TtbNoColumns and (not found)]">
                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="ui:GenericValue" Name="TtbValue" />
                                                      <Variable x:TypeArguments="ui:GenericValue" Name="NtbValue" />
                                                    </Sequence.Variables>
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[TtbValue]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">[TOTAL.Rows(rowindex)(columnindex).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[NtbValue]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">[NEED.Rows(rowindex)(columnindex).ToString]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <If Condition="[TtbValue &lt;&gt; NtbValue]" sap2010:WorkflowViewState.IdRef="If_8">
                                                      <If.Then>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[found]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </If.Then>
                                                    </If>
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[columnindex]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[columnindex + 1]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                </While>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[rowindex]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[rowindex + 1]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </While>
                                          </Sequence>
                                          <FlowStep.Next>
                                            <FlowDecision x:Name="__ReferenceID4" Condition="[found = false]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                              <FlowDecision.True>
                                                <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_41">
                                                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="필요학점 충족" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\&quot; + studentCode + &quot; 졸업사정조회&quot;]">
                                                    <ui:ExcelApplicationScope.Body>
                                                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                          <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_54" SheetName="Sheet1" Text="취득학점 여부" />
                                                          <ui:ExcelWriteCell Cell="B1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_55" SheetName="Sheet1" Text="수강 학점과 필요 학점이 동일합니다." />
                                                          <ui:ExcelReadRange AddHeaders="True" DataTable="[Credit]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="Sheet1">
                                                            <ui:ExcelReadRange.Range>
                                                              <InArgument x:TypeArguments="x:String">
                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                              </InArgument>
                                                            </ui:ExcelReadRange.Range>
                                                          </ui:ExcelReadRange>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ExcelApplicationScope.Body>
                                                  </ui:ExcelApplicationScope>
                                                </FlowStep>
                                              </FlowDecision.True>
                                              <FlowDecision.False>
                                                <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_40">
                                                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="필요학점 미달" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\&quot; + studentCode + &quot; 졸업사정조회&quot;]">
                                                    <ui:ExcelApplicationScope.Body>
                                                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                          <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_52" SheetName="Sheet1" Text="취득학점 여부" />
                                                          <ui:ExcelWriteCell Cell="B1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_53" SheetName="Sheet1" Text="수강학점과 필요학점이 상이합니다. 폴더 내의 본인 세부사항을 확인하세요." />
                                                          <ui:ExcelReadRange AddHeaders="False" DataTable="[Credit]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" SheetName="Sheet1">
                                                            <ui:ExcelReadRange.Range>
                                                              <InArgument x:TypeArguments="x:String">
                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                              </InArgument>
                                                            </ui:ExcelReadRange.Range>
                                                          </ui:ExcelReadRange>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ExcelApplicationScope.Body>
                                                  </ui:ExcelApplicationScope>
                                                </FlowStep>
                                              </FlowDecision.False>
                                            </FlowDecision>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowDecision.True>
                                      <FlowDecision.False>
                                        <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_42">
                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="행열 불일치" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_11" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\&quot; + studentCode + &quot; 오류정보&quot;]">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                  <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_56" SheetName="Sheet1" Text="데이터 정보를 불러오는 과정에서 오류가 발생했습니다. 본인의 폴더에서 자세한 사항을 확인해주세요." />
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                          </ui:ExcelApplicationScope>
                                        </FlowStep>
                                      </FlowDecision.False>
                                    </FlowDecision>
                                  </FlowStep.Next>
                                </FlowStep>
                              </Flowchart.StartNode>
                              <x:Reference>__ReferenceID1</x:Reference>
                              <x:Reference>__ReferenceID2</x:Reference>
                              <x:Reference>__ReferenceID3</x:Reference>
                              <x:Reference>__ReferenceID4</x:Reference>
                              <x:Reference>__ReferenceID5</x:Reference>
                              <x:Reference>__ReferenceID6</x:Reference>
                              <x:Reference>__ReferenceID7</x:Reference>
                            </Flowchart>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_50">
                                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="취득학점차 확인" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_20" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강,필요학점.xlsx&quot;]">
                                  <ui:ExcelApplicationScope.Body>
                                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="학점차 작성" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="sd:DataTable" Name="InputTable" />
                                          <Variable x:TypeArguments="x:Int32" Name="rowindex" />
                                        </Sequence.Variables>
                                        <ui:ExcelReadRange AddHeaders="True" DataTable="[InputTable]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_13" Range="B1" SheetName="Sheet1" />
                                        <ui:ExcelWriteCell Cell="D1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_72" SheetName="Sheet1" Text="필요학점부분(-는 초과이수 학점)" />
                                        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[InputTable]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                          <ui:ForEachRow.Body>
                                            <ActivityAction x:TypeArguments="sd:DataRow">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:Double" Name="valueA" />
                                                  <Variable x:TypeArguments="x:Double" Name="valueB" />
                                                  <Variable x:TypeArguments="x:Double" Name="valueC" />
                                                </Sequence.Variables>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Int32">[rowindex]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[InputTable.Rows.IndexOf(row)+1]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DisplayName="Get Row Item" sap2010:WorkflowViewState.IdRef="GetRowItem_1" Row="[row]">
                                                  <ui:GetRowItem.Value>
                                                    <OutArgument x:TypeArguments="x:Double">[valueA]</OutArgument>
                                                  </ui:GetRowItem.Value>
                                                </ui:GetRowItem>
                                                <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="1" DisplayName="Get Row Item" sap2010:WorkflowViewState.IdRef="GetRowItem_2" Row="[row]">
                                                  <ui:GetRowItem.Value>
                                                    <OutArgument x:TypeArguments="x:Double">[valueB]</OutArgument>
                                                  </ui:GetRowItem.Value>
                                                </ui:GetRowItem>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Double">[valueC]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Double">[valueA - valueB]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:ExcelWriteCell Cell="[&quot;D&quot; + (rowindex + 1).ToString]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_71" SheetName="Sheet1" Text="[valueC.ToString]" />
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEachRow.Body>
                                        </ui:ForEachRow>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ExcelApplicationScope.Body>
                                </ui:ExcelApplicationScope>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                                    <Sequence DisplayName="영어성적 통과 여부" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="ui:GenericValue" Name="engClass" />
                                        <Variable x:TypeArguments="ui:GenericValue" Name="a" />
                                      </Sequence.Variables>
                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="성적조회 접속" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="cddd229b4057ecaaa3bd8f6650b04a67" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl aaname='성적조회' parentid='T_102' tag='FONT' /&gt;" WaitForReady="INTERACTIVE" />
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <ui:GetValue ContinueOnError="{x:Null}" DisplayName="영어 수강여부 가지고오기" sap2010:WorkflowViewState.IdRef="GetValue_3">
                                        <ui:GetValue.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="72b61d33eefe4698194b9e500777f020" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='7' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableRow='8' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                                        </ui:GetValue.Target>
                                        <ui:GetValue.Value>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[engClass]</OutArgument>
                                        </ui:GetValue.Value>
                                      </ui:GetValue>
                                      <If Condition="[engClass.Contains(&quot;L5&quot;) and engClass.Contains(&quot;R5&quot;)]" sap2010:WorkflowViewState.IdRef="If_5">
                                        <If.Then>
                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_56">
                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_12" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\&quot; + studentCode + &quot; 졸업사정조회&quot;]">
                                              <ui:ExcelApplicationScope.Body>
                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                    <ui:ExcelWriteRange AddHeaders="False" DataTable="[Credit]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="Sheet1" StartingCell="A1" />
                                                    <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_57" SheetName="Sheet1" Text="영어 강의 통과 여부" />
                                                    <ui:ExcelWriteCell Cell="B2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_58" SheetName="Sheet1" Text="영어3,4(면제) 수강 확인되셨습니다." />
                                                    <ui:ExcelReadRange AddHeaders="False" DataTable="[Cre_Eng]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" SheetName="Sheet1">
                                                      <ui:ExcelReadRange.Range>
                                                        <InArgument x:TypeArguments="x:String">
                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                        </InArgument>
                                                      </ui:ExcelReadRange.Range>
                                                    </ui:ExcelReadRange>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ExcelApplicationScope.Body>
                                            </ui:ExcelApplicationScope>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <If Condition="[engClass.Contains(&quot;L3&quot;) and engClass.Contains(&quot;R3&quot;)]" sap2010:WorkflowViewState.IdRef="If_7">
                                            <If.Then>
                                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_13" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\&quot; + studentCode + &quot; 졸업사정조회&quot;]">
                                                <ui:ExcelApplicationScope.Body>
                                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[Credit]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_11" SheetName="Sheet1" StartingCell="A1" />
                                                      <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_59" SheetName="Sheet1" Text="영어 강의 통과 여부" />
                                                      <ui:ExcelWriteCell Cell="B2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_60" SheetName="Sheet1" Text="영어1,2 수강 확인되셨습니다." />
                                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[Cre_Eng]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" SheetName="Sheet1">
                                                        <ui:ExcelReadRange.Range>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                          </InArgument>
                                                        </ui:ExcelReadRange.Range>
                                                      </ui:ExcelReadRange>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ExcelApplicationScope.Body>
                                              </ui:ExcelApplicationScope>
                                            </If.Then>
                                            <If.Else>
                                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_14" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\&quot; + studentCode + &quot; 졸업사정조회&quot;]">
                                                <ui:ExcelApplicationScope.Body>
                                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[Credit]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_12" SheetName="Sheet1" StartingCell="A1" />
                                                      <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_61" SheetName="Sheet1" Text="영어 강의 통과 여부" />
                                                      <ui:ExcelWriteCell Cell="B2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_62" SheetName="Sheet1" Text="영어강의의 수강이 필요합니다." />
                                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[Cre_Eng]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" SheetName="Sheet1">
                                                        <ui:ExcelReadRange.Range>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                          </InArgument>
                                                        </ui:ExcelReadRange.Range>
                                                      </ui:ExcelReadRange>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ExcelApplicationScope.Body>
                                              </ui:ExcelApplicationScope>
                                            </If.Else>
                                          </If>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID15" sap2010:WorkflowViewState.IdRef="FlowStep_43">
                                        <Sequence DisplayName="어학성적 통과 여부" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                          <If Condition="[lanCredit = &quot;Yes&quot;]" sap2010:WorkflowViewState.IdRef="If_9">
                                            <If.Then>
                                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_15" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\&quot; + studentCode + &quot; 졸업사정조회&quot;]">
                                                <ui:ExcelApplicationScope.Body>
                                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[Cre_Eng]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_13" SheetName="Sheet1" StartingCell="A1" />
                                                      <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_63" SheetName="Sheet1" Text="어학성적 통과 여부" />
                                                      <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_64" SheetName="Sheet1" Text="기준 어학성적을 통과하셨습니다." />
                                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[Cre_Eng_Lan]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" SheetName="Sheet1">
                                                        <ui:ExcelReadRange.Range>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                          </InArgument>
                                                        </ui:ExcelReadRange.Range>
                                                      </ui:ExcelReadRange>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ExcelApplicationScope.Body>
                                              </ui:ExcelApplicationScope>
                                            </If.Then>
                                            <If.Else>
                                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_16" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\&quot; + studentCode + &quot; 졸업사정조회&quot;]">
                                                <ui:ExcelApplicationScope.Body>
                                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[Cre_Eng]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_14" SheetName="Sheet1" StartingCell="A1" />
                                                      <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_65" SheetName="Sheet1" Text="어학성적 통과 여부" />
                                                      <ui:ExcelWriteCell Cell="B3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_66" SheetName="Sheet1" Text="기준 어학성적이 미달되었습니다." />
                                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[Cre_Eng_Lan]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" SheetName="Sheet1">
                                                        <ui:ExcelReadRange.Range>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                          </InArgument>
                                                        </ui:ExcelReadRange.Range>
                                                      </ui:ExcelReadRange>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ExcelApplicationScope.Body>
                                              </ui:ExcelApplicationScope>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_52">
                                            <Sequence DisplayName="필수교과 정보생성" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'TD'" sap2010:WorkflowViewState.IdRef="GetValue_25">
                                                <ui:GetValue.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7b6e9f25d2eb135a1c2fc96c7109ada9" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='6' tag='TABLE' /&gt;&lt;webctrl tableCol='2' tableRow='2' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
                                                </ui:GetValue.Target>
                                                <ui:GetValue.Value>
                                                  <OutArgument x:TypeArguments="x:String">[major]</OutArgument>
                                                </ui:GetValue.Value>
                                              </ui:GetValue>
                                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_22" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 필수수강정보.xlsx&quot;]">
                                                <ui:ExcelApplicationScope.Body>
                                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                    </ActivityAction.Argument>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_77">
                                                      <Sequence DisplayName="공통필수수강" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                                        <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_74" SheetName="공통필수수강" Text="공통필수수강" />
                                                        <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_75" SheetName="공통필수수강" Text="성경개론" />
                                                        <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_76" SheetName="공통필수수강" Text="성서의이해" />
                                                        <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_78" SheetName="공통필수수강" Text="현대사회와기독교윤리" />
                                                        <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_79" SheetName="공통필수수강" Text="종교와과학" />
                                                        <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_80" SheetName="공통필수수강" Text="기독교와문화" />
                                                        <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_81" SheetName="공통필수수강" Text="글쓰기" />
                                                        <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_82" SheetName="공통필수수강" Text="발표와토의" />
                                                        <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_83" SheetName="공통필수수강" Text="철학과인간" />
                                                        <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_84" SheetName="공통필수수강" Text="한국근현대사의이해" />
                                                        <ui:ExcelWriteCell Cell="A11" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_85" SheetName="공통필수수강" Text="역사와문명" />
                                                      </Sequence>
                                                      <Sequence DisplayName="공통핵심교양" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                                        <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_91" SheetName="공통핵심교양" Text="공통핵심교양" />
                                                        <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_92" SheetName="공통핵심교양" Text="시계화와사회변화" />
                                                        <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_93" SheetName="공통핵심교양" Text="민주주의와현대사회" />
                                                        <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_94" SheetName="공통핵심교양" Text="여성문제의이해" />
                                                        <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_95" SheetName="공통핵심교양" Text="여성·소수자·공동체" />
                                                        <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_96" SheetName="공통핵심교양" Text="글로벌문화" />
                                                        <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_97" SheetName="공통핵심교양" Text="통섭의예술" />
                                                        <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_98" SheetName="공통핵심교양" Text="동서문화의이해" />
                                                        <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_99" SheetName="공통핵심교양" Text="한국전통문화의이해" />
                                                        <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_100" SheetName="공통핵심교양" Text="예술과사회" />
                                                        <ui:ExcelWriteCell Cell="A11" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_101" SheetName="공통핵심교양" Text="고전으로읽는인문학" />
                                                        <ui:ExcelWriteCell Cell="A12" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_102" SheetName="공통핵심교양" Text="예술과창조성" />
                                                        <ui:ExcelWriteCell Cell="A13" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_103" SheetName="공통핵심교양" Text="첨단과학의이해" />
                                                        <ui:ExcelWriteCell Cell="A14" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_104" SheetName="공통핵심교양" Text="환경과인간" />
                                                        <ui:ExcelWriteCell Cell="A15" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_105" SheetName="공통핵심교양" Text="창업입문" />
                                                        <ui:ExcelWriteCell Cell="A16" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_106" SheetName="공통핵심교양" Text="우주,생명,마음" />
                                                        <ui:ExcelWriteCell Cell="A17" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_107" SheetName="공통핵심교양" Text="SW프로그래밍입문" />
                                                        <ui:ExcelWriteCell Cell="A18" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_108" SheetName="공통핵심교양" Text="인공지능의세계" />
                                                        <ui:ExcelWriteCell Cell="A19" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_109" SheetName="공통핵심교양" Text="4차산업혁명의이해" />
                                                      </Sequence>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ExcelApplicationScope.Body>
                                              </ui:ExcelApplicationScope>
                                              <If Condition="[major.Contains(&quot;경영정보&quot;)]" sap2010:WorkflowViewState.IdRef="If_11">
                                                <If.Then>
                                                  <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_23" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 필수수강정보.xlsx&quot;]">
                                                    <ui:ExcelApplicationScope.Body>
                                                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="경영정보학과 필수전공" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                                          <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_113" SheetName="[major + &quot; 필수전공&quot;]" Text="경영정보학과 필수전공" />
                                                          <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_114" SheetName="[major + &quot; 필수전공&quot;]" Text="미시경제학원론" />
                                                          <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_115" SheetName="[major + &quot; 필수전공&quot;]" Text="경상통계학" />
                                                          <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_116" SheetName="[major + &quot; 필수전공&quot;]" Text="경영정보" />
                                                          <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_117" SheetName="[major + &quot; 필수전공&quot;]" Text="컴퓨터프로그래밍" />
                                                          <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_118" SheetName="[major + &quot; 필수전공&quot;]" Text="인적자원관리" />
                                                          <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_119" SheetName="[major + &quot; 필수전공&quot;]" Text="회계원리" />
                                                          <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_120" SheetName="[major + &quot; 필수전공&quot;]" Text="마케팅원론" />
                                                          <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_121" SheetName="[major + &quot; 필수전공&quot;]" Text="생산운영관리" />
                                                          <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_122" SheetName="[major + &quot; 필수전공&quot;]" Text="재무관리원론" />
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ExcelApplicationScope.Body>
                                                  </ui:ExcelApplicationScope>
                                                </If.Then>
                                                <If.Else>
                                                  <If Condition="[major.Contains(&quot;국제통상&quot;)]" sap2010:WorkflowViewState.IdRef="If_10">
                                                    <If.Then>
                                                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_24" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 필수수강정보xlsx&quot;]">
                                                        <ui:ExcelApplicationScope.Body>
                                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="국제통상학과 필수전공" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                                              <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_123" SheetName="[major + &quot; 필수전공&quot;]" Text="국제통상학과 필수전공" />
                                                              <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_124" SheetName="[major + &quot; 필수전공&quot;]" Text="미시경제학원론" />
                                                              <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_125" SheetName="[major + &quot; 필수전공&quot;]" Text="거시경제학원론" />
                                                              <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_126" SheetName="[major + &quot; 필수전공&quot;]" Text="국제통상원론" />
                                                              <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_127" SheetName="[major + &quot; 필수전공&quot;]" Text="글로벌경영전략" />
                                                              <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_128" SheetName="[major + &quot; 필수전공&quot;]" Text="국제경영학" />
                                                              <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_129" SheetName="[major + &quot; 필수전공&quot;]" Text="회계원리" />
                                                              <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_130" SheetName="[major + &quot; 필수전공&quot;]" Text="마케팅원론" />
                                                              <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_131" SheetName="[major + &quot; 필수전공&quot;]" Text="재무관리원론" />
                                                              <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_132" SheetName="[major + &quot; 필수전공&quot;]" Text="인적자원관리" />
                                                              <ui:ExcelWriteCell Cell="A11" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_133" SheetName="[major + &quot; 필수전공&quot;]" Text="생산운영관리" />
                                                              <ui:ExcelWriteCell Cell="B7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_134" SheetName="[major + &quot; 필수전공&quot;]" Text="이하 과목 중 택 4" />
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:ExcelApplicationScope.Body>
                                                      </ui:ExcelApplicationScope>
                                                    </If.Then>
                                                    <If.Else>
                                                      <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_25" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 필수수강정보.xlsx&quot;]">
                                                        <ui:ExcelApplicationScope.Body>
                                                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                                              <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_135" SheetName="[major + &quot; 필수전공&quot;]" Text="경영학과 필수전공" />
                                                              <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_136" SheetName="[major + &quot; 필수전공&quot;]" Text="미시경제학원론" />
                                                              <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_137" SheetName="[major + &quot; 필수전공&quot;]" Text="경상통계학" />
                                                              <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_138" SheetName="[major + &quot; 필수전공&quot;]" Text="회계원리" />
                                                              <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_139" SheetName="[major + &quot; 필수전공&quot;]" Text="마케팅원론" />
                                                              <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_140" SheetName="[major + &quot; 필수전공&quot;]" Text="생산운영관리" />
                                                              <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_141" SheetName="[major + &quot; 필수전공&quot;]" Text="재무관리원론" />
                                                              <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_142" SheetName="[major + &quot; 필수전공&quot;]" Text="인적자원관리" />
                                                              <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_143" SheetName="[major + &quot; 필수전공&quot;]" Text="재무회계" />
                                                              <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_144" SheetName="[major + &quot; 필수전공&quot;]" Text="국제통상원론" />
                                                              <ui:ExcelWriteCell Cell="A11" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_145" SheetName="[major + &quot; 필수전공&quot;]" Text="국제경영학" />
                                                              <ui:ExcelWriteCell Cell="A12" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_146" SheetName="[major + &quot; 필수전공&quot;]" Text="경영정보" />
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:ExcelApplicationScope.Body>
                                                      </ui:ExcelApplicationScope>
                                                    </If.Else>
                                                  </If>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_33">
                                                <Sequence DisplayName="필수과목 수강 여부" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="sd:DataTable" Name="subject1" />
                                                    <Variable x:TypeArguments="sd:DataTable" Name="grade1" />
                                                    <Variable x:TypeArguments="sd:DataTable" Name="subject2" />
                                                  </Sequence.Variables>
                                                  <Sequence DisplayName="수강했던 과목" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="IE" DisplayName="수강했던 과목 확인" sap2010:WorkflowViewState.IdRef="BrowserScope_7" InformativeScreenshot="330c60bb173e95507ae3d5410f0d44ff" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;">
                                                      <ui:BrowserScope.Body>
                                                        <ActivityAction x:TypeArguments="x:Object">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                          </ActivityAction.Argument>
                                                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                            <ui:ExtractData NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[subject1]" DelayBetweenPagesMS="300" DisplayName="수강했던 과목" ExtractMetadata="&lt;extract&gt;&lt;column name='교과목명' attr='text' exact='1'&gt;&lt;webctrl tag='body' idx='1' /&gt;&lt;webctrl tag='div' class='tablist' idx='1' /&gt;&lt;webctrl tag='div' class='tab tab-1' idx='1' /&gt;&lt;webctrl tag='div' /&gt;&lt;webctrl tag='table' class='default' idx='1' /&gt;&lt;webctrl tag='tbody' idx='1' /&gt;&lt;webctrl tag='tr' class='colorrow' /&gt;&lt;webctrl tag='td' idx='2' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap2010:WorkflowViewState.IdRef="ExtractData_7" MaxNumberOfResults="100">
                                                              <ui:ExtractData.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="b1111c23af8819df76a253151078167b" Selector="&lt;webctrl idx='4' tag='HTML' /&gt;" WaitForReady="COMPLETE" />
                                                              </ui:ExtractData.Target>
                                                            </ui:ExtractData>
                                                            <ui:ExtractData NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[grade1]" DelayBetweenPagesMS="300" DisplayName="수강했던 성적" ExtractMetadata="&lt;extract&gt;&lt;column name='성적' attr='text' exact='1'&gt;&lt;webctrl tag='body' idx='1' /&gt;&lt;webctrl tag='div' class='tablist' idx='1' /&gt;&lt;webctrl tag='div' class='tab tab-1' idx='1' /&gt;&lt;webctrl tag='div' /&gt;&lt;webctrl tag='table' class='default' idx='1' /&gt;&lt;webctrl tag='tbody' idx='1' /&gt;&lt;webctrl tag='tr' class='colorrow' /&gt;&lt;webctrl tag='td' idx='6' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap2010:WorkflowViewState.IdRef="ExtractData_8" MaxNumberOfResults="100">
                                                              <ui:ExtractData.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="773a8e9f667a6e56126ec74e9b584dfd" Selector="&lt;webctrl idx='4' tag='HTML' /&gt;" WaitForReady="COMPLETE" />
                                                              </ui:ExtractData.Target>
                                                            </ui:ExtractData>
                                                            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'FONT'" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                                              <ui:Click.CursorPosition>
                                                                <ui:CursorPosition Position="Center">
                                                                  <ui:CursorPosition.OffsetX>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:CursorPosition.OffsetX>
                                                                  <ui:CursorPosition.OffsetY>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:CursorPosition.OffsetY>
                                                                </ui:CursorPosition>
                                                              </ui:Click.CursorPosition>
                                                              <ui:Click.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7ab6191b587cfc0a6b2e640af1ce4d11" Selector="&lt;webctrl aaname='수강성적조회' parentid='T_102' tag='FONT' /&gt;" WaitForReady="INTERACTIVE" />
                                                              </ui:Click.Target>
                                                            </ui:Click>
                                                            <ui:ExtractData NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[subject2]" DelayBetweenPagesMS="300" DisplayName="수강중인 과목" ExtractMetadata="&lt;extract&gt;&lt;column name='교과목명' attr='text' exact='1'&gt;&lt;webctrl tag='body' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='table' class='default' idx='1' /&gt;&lt;webctrl tag='tbody' idx='1' /&gt;&lt;webctrl tag='tr' class='lecture colorrow' /&gt;&lt;webctrl tag='td' idx='2' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap2010:WorkflowViewState.IdRef="ExtractData_9" MaxNumberOfResults="100">
                                                              <ui:ExtractData.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="d8d7a68328f9c690be1ff3433bdaeacd" Selector="&lt;webctrl idx='4' tag='HTML' /&gt;" WaitForReady="COMPLETE" />
                                                              </ui:ExtractData.Target>
                                                            </ui:ExtractData>
                                                            <ui:ExtractData NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[grade2]" DelayBetweenPagesMS="300" DisplayName="수강중인 성적" ExtractMetadata="&lt;extract&gt;&lt;column name='성적' attr='text' exact='1'&gt;&lt;webctrl tag='body' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='table' class='default' idx='1' /&gt;&lt;webctrl tag='tbody' idx='1' /&gt;&lt;webctrl tag='tr' class='lecture colorrow' /&gt;&lt;webctrl tag='td' idx='4' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap2010:WorkflowViewState.IdRef="ExtractData_10" MaxNumberOfResults="100">
                                                              <ui:ExtractData.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9fae827610cad93f572d270aa7c323b9" Selector="&lt;webctrl idx='4' tag='HTML' /&gt;" WaitForReady="COMPLETE" />
                                                              </ui:ExtractData.Target>
                                                            </ui:ExtractData>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:BrowserScope.Body>
                                                    </ui:BrowserScope>
                                                    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 필수수강정보.xlsx&quot;]">
                                                      <ui:ExcelApplicationScope.Body>
                                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                          </ActivityAction.Argument>
                                                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="sd:DataTable" Name="subject_grade" />
                                                              <Variable x:TypeArguments="sd:DataTable" Name="sub_gra_f" />
                                                            </Sequence.Variables>
                                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[subject1]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_6" SheetName="수강한과목" StartingCell="A1" />
                                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[grade1]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="수강한과목" StartingCell="B1" />
                                                            <ui:ExcelReadRange AddHeaders="True" DataTable="[subject_grade]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_14" SheetName="수강한과목">
                                                              <ui:ExcelReadRange.Range>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                                </InArgument>
                                                              </ui:ExcelReadRange.Range>
                                                            </ui:ExcelReadRange>
                                                            <ui:FilterDataTable DataTable="[subject_grade]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[sub_gra_f]" SelectColumnsMode="Keep">
                                                              <ui:FilterDataTable.Filters>
                                                                <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                                  <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                                                                    <ui:FilterOperationArgument.Column>
                                                                      <InArgument x:TypeArguments="x:String">["성적"]</InArgument>
                                                                    </ui:FilterOperationArgument.Column>
                                                                    <ui:FilterOperationArgument.Operand>
                                                                      <InArgument x:TypeArguments="x:String">["F"]</InArgument>
                                                                    </ui:FilterOperationArgument.Operand>
                                                                  </ui:FilterOperationArgument>
                                                                </scg:List>
                                                              </ui:FilterDataTable.Filters>
                                                              <ui:FilterDataTable.SelectColumns>
                                                                <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                                  <x:Null />
                                                                </scg:List>
                                                              </ui:FilterDataTable.SelectColumns>
                                                            </ui:FilterDataTable>
                                                            <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_147" SheetName="수강한과목" Text="수강한과목" />
                                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[sub_gra_f]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_21" SheetName="수강한과목" StartingCell="A2" />
                                                            <ui:ExcelDeleteRange DisplayName="Delete Range" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_1" Range="B1" SheetName="수강한과목" ShiftCells="True" ShiftOption="EntireColumn" />
                                                            <ui:ExcelWriteRange AddHeaders="True" DataTable="[subject2]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="수강한과목2" StartingCell="B1" />
                                                            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="sd:DataTable" Name="referenceData" />
                                                                <Variable x:TypeArguments="sd:DataTable" Name="inputData" />
                                                                <Variable x:TypeArguments="sd:DataColumn[]" Name="allColumns" />
                                                                <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                <Variable x:TypeArguments="sd:DataTable" Name="result" />
                                                                <Variable x:TypeArguments="x:String" Name="test145" />
                                                              </Sequence.Variables>
                                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[referenceData]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_15" Range="A1" SheetName="공통필수수강" />
                                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[inputData]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_16" Range="A1" SheetName="수강한과목" />
                                                              <Assign DisplayName="Initialize all columns array" sap2010:WorkflowViewState.IdRef="Assign_28">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="sd:DataColumn[]">[new DataColumn(referenceData.Columns.Count) {}]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="CopyTo">
                                                                <InvokeMethod.TargetObject>
                                                                  <InArgument x:TypeArguments="sd:DataColumnCollection">[referenceData.Columns]</InArgument>
                                                                </InvokeMethod.TargetObject>
                                                                <InArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</InArgument>
                                                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                              </InvokeMethod>
                                                              <Assign DisplayName="Set PrimaryKey" sap2010:WorkflowViewState.IdRef="Assign_29">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="sd:DataColumn[]">[referenceData.PrimaryKey]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[inputData]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                                                                <ui:ForEachRow.Body>
                                                                  <ActivityAction x:TypeArguments="sd:DataRow">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                                    </ActivityAction.Argument>
                                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Int32">[inputData.Rows.IndexOf(row)+1]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <If Condition="[referenceData.Rows.Contains(row.ItemArray)]" sap2010:WorkflowViewState.IdRef="If_14">
                                                                        <If.Then>
                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_88">
                                                                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[String.Format(&quot;Duplicated row found: {0}&quot;, row(0))]" />
                                                                            <ui:ExcelWriteCell Cell="[&quot;A&quot; + count.ToString]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_148" SheetName="공통필수수강 이수정보" Text="[String.Format(&quot;{0} &quot;, row(0))]" />
                                                                          </Sequence>
                                                                        </If.Then>
                                                                        <If.Else>
                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_89">
                                                                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[String.Format(&quot;new row found: {0} {1}&quot;, row(0), row(0))]" />
                                                                          </Sequence>
                                                                        </If.Else>
                                                                      </If>
                                                                    </Sequence>
                                                                  </ActivityAction>
                                                                </ui:ForEachRow.Body>
                                                              </ui:ForEachRow>
                                                              <ui:ExcelReadRange AddHeaders="False" DataTable="[sub_in_pri]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_20" SheetName="공통필수수강 이수정보">
                                                                <ui:ExcelReadRange.Range>
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <Literal x:TypeArguments="x:String" Value="" />
                                                                  </InArgument>
                                                                </ui:ExcelReadRange.Range>
                                                              </ui:ExcelReadRange>
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="sd:DataTable">[sub_in_pri]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="sd:DataTable">[sub_in_pri.Rows.Cast(Of DataRow)().Where(Function(row) Not row.ItemArray.All(Function(field) field Is DBNull.Value Or field.Equals(""))).CopyToDataTable()]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <ui:ExcelDeleteRange DisplayName="Delete Range" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_3" Range="A1" SheetName="공통필수수강 이수정보" ShiftCells="True" ShiftOption="EntireColumn" />
                                                              <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_224" SheetName="공통필수수강 이수정보" Text="공통필수수강 이수정보" />
                                                              <ui:ExcelWriteRange AddHeaders="False" DataTable="[sub_in_pri]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_23" SheetName="공통필수수강 이수정보" StartingCell="A2" />
                                                              <ui:ExcelReadRange AddHeaders="True" DataTable="[sub_in_pri]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_29" SheetName="공통필수수강 이수정보">
                                                                <ui:ExcelReadRange.Range>
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <Literal x:TypeArguments="x:String" Value="" />
                                                                  </InArgument>
                                                                </ui:ExcelReadRange.Range>
                                                              </ui:ExcelReadRange>
                                                              <ui:OutputDataTable DataTable="[sub_in_pri]" DisplayName="Output Data Table" sap2010:WorkflowViewState.IdRef="OutputDataTable_6" Text="[test145]" />
                                                              <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_102">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="sd:DataTable" Name="referenceData" />
                                                                  <Variable x:TypeArguments="sd:DataTable" Name="inputData" />
                                                                  <Variable x:TypeArguments="sd:DataColumn[]" Name="allColumns" />
                                                                  <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                  <Variable x:TypeArguments="sd:DataTable" Name="result" />
                                                                </Sequence.Variables>
                                                                <ui:ExcelReadRange AddHeaders="True" DataTable="[referenceData]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_18" Range="A1" SheetName="공통핵심교양" />
                                                                <ui:ExcelReadRange AddHeaders="True" DataTable="[inputData]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_19" Range="A1" SheetName="수강한과목" />
                                                                <Assign DisplayName="Initialize all columns array" sap2010:WorkflowViewState.IdRef="Assign_32">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="sd:DataColumn[]">[new DataColumn(referenceData.Columns.Count) {}]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="CopyTo">
                                                                  <InvokeMethod.TargetObject>
                                                                    <InArgument x:TypeArguments="sd:DataColumnCollection">[referenceData.Columns]</InArgument>
                                                                  </InvokeMethod.TargetObject>
                                                                  <InArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                                </InvokeMethod>
                                                                <Assign DisplayName="Set PrimaryKey" sap2010:WorkflowViewState.IdRef="Assign_33">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="sd:DataColumn[]">[referenceData.PrimaryKey]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[inputData]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                                                                  <ui:ForEachRow.Body>
                                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Int32">[inputData.Rows.IndexOf(row)+1]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <If Condition="[referenceData.Rows.Contains(row.ItemArray)]" sap2010:WorkflowViewState.IdRef="If_17">
                                                                          <If.Then>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_99">
                                                                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[String.Format(&quot;Duplicated row found: {0}&quot;, row(0))]" />
                                                                              <ui:ExcelWriteCell Cell="[&quot;A&quot; + count.ToString]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_223" SheetName="공통핵심교양 이수정보" Text="[String.Format(&quot;{0} &quot;, row(0))]" />
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_100">
                                                                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[String.Format(&quot;new row found: {0} {1}&quot;, row(0), row(0))]" />
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEachRow.Body>
                                                                </ui:ForEachRow>
                                                              </Sequence>
                                                            </Sequence>
                                                            <ui:ExcelReadRange AddHeaders="False" DataTable="[sub_in_pri1]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_17" SheetName="공통핵심교양 이수정보">
                                                              <ui:ExcelReadRange.Range>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                                </InArgument>
                                                              </ui:ExcelReadRange.Range>
                                                            </ui:ExcelReadRange>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="sd:DataTable">[sub_in_pri1]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="sd:DataTable">[sub_in_pri1.Rows.Cast(Of DataRow)().Where(Function(row) Not row.ItemArray.All(Function(field) field Is DBNull.Value Or field.Equals(""))).CopyToDataTable()]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:ExcelDeleteRange DisplayName="Delete Range" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_2" Range="A1" SheetName="공통핵심교양 이수정보" ShiftCells="True" ShiftOption="EntireColumn" />
                                                            <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_222" SheetName="공통핵심교양 이수정보" Text="공통핵심교양 이수정보" />
                                                            <ui:ExcelWriteRange AddHeaders="False" DataTable="[sub_in_pri1]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_22" SheetName="공통핵심교양 이수정보" StartingCell="A2" />
                                                            <ui:ExcelReadRange AddHeaders="True" DataTable="[sub_in_pri1]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_30" SheetName="공통핵심교양 이수정보">
                                                              <ui:ExcelReadRange.Range>
                                                                <InArgument x:TypeArguments="x:String">
                                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                                </InArgument>
                                                              </ui:ExcelReadRange.Range>
                                                            </ui:ExcelReadRange>
                                                            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_110">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="sd:DataTable" Name="referenceData" />
                                                                <Variable x:TypeArguments="sd:DataTable" Name="inputData" />
                                                                <Variable x:TypeArguments="sd:DataColumn[]" Name="allColumns" />
                                                                <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                <Variable x:TypeArguments="sd:DataTable" Name="result" />
                                                              </Sequence.Variables>
                                                              <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_109">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="sd:DataTable" Name="referenceData" />
                                                                  <Variable x:TypeArguments="sd:DataTable" Name="inputData" />
                                                                  <Variable x:TypeArguments="sd:DataColumn[]" Name="allColumns" />
                                                                  <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                  <Variable x:TypeArguments="sd:DataTable" Name="result" />
                                                                  <Variable x:TypeArguments="x:String" Name="test144" />
                                                                </Sequence.Variables>
                                                                <ui:ExcelReadRange AddHeaders="True" DataTable="[referenceData]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_24" Range="A1" SheetName="[major + &quot; 필수전공&quot;]" />
                                                                <ui:ExcelReadRange AddHeaders="True" DataTable="[inputData]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_25" Range="A1" SheetName="[major + &quot; 필수전공&quot;]" />
                                                                <Assign DisplayName="Initialize all columns array" sap2010:WorkflowViewState.IdRef="Assign_40">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="sd:DataColumn[]">[new DataColumn(referenceData.Columns.Count) {}]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="CopyTo">
                                                                  <InvokeMethod.TargetObject>
                                                                    <InArgument x:TypeArguments="sd:DataColumnCollection">[referenceData.Columns]</InArgument>
                                                                  </InvokeMethod.TargetObject>
                                                                  <InArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                                </InvokeMethod>
                                                                <Assign DisplayName="Set PrimaryKey" sap2010:WorkflowViewState.IdRef="Assign_41">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="sd:DataColumn[]">[referenceData.PrimaryKey]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[inputData]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                                                                  <ui:ForEachRow.Body>
                                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_108">
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Int32">[inputData.Rows.IndexOf(row)+1]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <If Condition="[referenceData.Rows.Contains(row.ItemArray)]" sap2010:WorkflowViewState.IdRef="If_19">
                                                                          <If.Then>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_106">
                                                                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[String.Format(&quot;Duplicated row found: {0}&quot;, row(0))]" />
                                                                              <ui:ExcelWriteCell Cell="[&quot;A&quot; + count.ToString]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_227" SheetName="[major + &quot; 필수전공 이수정보&quot;]" Text="[String.Format(&quot;{0} &quot;, row(0))]" />
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_107">
                                                                              <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[String.Format(&quot;new row found: {0} {1}&quot;, row(0), row(0))]" />
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEachRow.Body>
                                                                </ui:ForEachRow>
                                                                <ui:ExcelReadRange AddHeaders="False" DataTable="[sub_in_pri2]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_26" SheetName="[major + &quot; 필수전공 이수정보&quot;]">
                                                                  <ui:ExcelReadRange.Range>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                                    </InArgument>
                                                                  </ui:ExcelReadRange.Range>
                                                                </ui:ExcelReadRange>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_43">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="sd:DataTable">[sub_in_pri2]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="sd:DataTable">[sub_in_pri2.Rows.Cast(Of DataRow)().Where(Function(row) Not row.ItemArray.All(Function(field) field Is DBNull.Value Or field.Equals(""))).CopyToDataTable()]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <ui:ExcelDeleteRange DisplayName="Delete Range" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_5" Range="A1" SheetName="[major + &quot; 필수전공 이수정보&quot;]" ShiftCells="True" ShiftOption="EntireColumn" />
                                                                <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_228" SheetName="[major + &quot; 필수전공 이수정보&quot;]" Text="[major + &quot; 필수전공 이수정보&quot;]" />
                                                                <ui:ExcelWriteRange AddHeaders="False" DataTable="[sub_in_pri2]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_25" SheetName="[major + &quot; 필수전공 이수정보&quot;]" StartingCell="A2" />
                                                                <ui:ExcelReadRange AddHeaders="True" DataTable="[sub_in_pri2]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_27" SheetName="[major + &quot; 필수전공 이수정보&quot;]">
                                                                  <ui:ExcelReadRange.Range>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                                    </InArgument>
                                                                  </ui:ExcelReadRange.Range>
                                                                </ui:ExcelReadRange>
                                                              </Sequence>
                                                            </Sequence>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:ExcelApplicationScope.Body>
                                                    </ui:ExcelApplicationScope>
                                                  </Sequence>
                                                </Sequence>
                                                <FlowStep.Next>
                                                  <FlowStep x:Name="__ReferenceID20" sap2010:WorkflowViewState.IdRef="FlowStep_67">
                                                    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="공통 및 핵심교양 확인" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_31" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\&quot; + studentCode + &quot; 졸업사정조회.xlsx&quot;]">
                                                      <ui:ExcelApplicationScope.Body>
                                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                          </ActivityAction.Argument>
                                                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_112">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="공통필수수강" Name="sub_in_pri_text" />
                                                              <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="공통핵심교양" Name="sub_in_pri1_text" />
                                                              <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="전공필수" Name="sub_in_pri2_text" />
                                                            </Sequence.Variables>
                                                            <ui:OutputDataTable DataTable="[sub_in_pri]" DisplayName="Output Data Table" sap2010:WorkflowViewState.IdRef="OutputDataTable_2" Text="[sub_in_pri_text]" />
                                                            <ui:OutputDataTable DataTable="[sub_in_pri1]" DisplayName="Output Data Table" sap2010:WorkflowViewState.IdRef="OutputDataTable_3" Text="[sub_in_pri1_text]" />
                                                            <ui:OutputDataTable DataTable="[sub_in_pri2]" DisplayName="Output Data Table" sap2010:WorkflowViewState.IdRef="OutputDataTable_4" Text="[sub_in_pri2_text]" />
                                                            <If Condition="[(sub_in_pri_text.Contains(&quot;성경개론&quot;) or sub_in_pri_text.Contains(&quot;성서의이해&quot;)) and (sub_in_pri_text.Contains(&quot;현대사회와기독교윤리&quot;) or sub_in_pri_text.Contains(&quot;종교와과학&quot;) or sub_in_pri_text.Contains(&quot;기독교와문화&quot;)) and (sub_in_pri_text.Contains(&quot;글쓰기&quot;) or sub_in_pri_text.Contains(&quot;발표와토의&quot;)) and (sub_in_pri_text.Contains(&quot;철학과인간&quot;) or sub_in_pri_text.Contains(&quot;한국근현대사의이해&quot;) or sub_in_pri_text.Contains(&quot;역사와문명&quot;))]" sap2010:WorkflowViewState.IdRef="If_24">
                                                              <If.Then>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_128">
                                                                  <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_259" SheetName="Sheet1" Text="공통필수" />
                                                                  <ui:ExcelWriteCell Cell="B4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_260" SheetName="Sheet1" Text="이수 확인되셨습니다." />
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_117">
                                                                  <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_237" SheetName="Sheet1" Text="공통필수" />
                                                                  <ui:ExcelWriteCell Cell="B4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_238" SheetName="Sheet1" Text="이수가 필요한 과목이 있습니다. 수강과목 및 필수수강정보 파일을 확인해주세요." />
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If Condition="[(sub_in_pri1_text.Contains(&quot;세계화와사회변화&quot;) or sub_in_pri1_text.Contains(&quot;민주주의와현대사회&quot;) or sub_in_pri1_text.Contains(&quot;여성문제의이해&quot;) or sub_in_pri1_text.Contains(&quot;여성·소수자·공동체&quot;)) and (sub_in_pri1_text.Contains(&quot;글로벌문화&quot;) or sub_in_pri1_text.Contains(&quot;통섭의예술&quot;) or sub_in_pri1_text.Contains(&quot;동서문화의이해&quot;) or sub_in_pri1_text.Contains(&quot;한국전통문화의이해&quot;) or sub_in_pri1_text.Contains(&quot;예술과사회&quot;) or sub_in_pri1_text.Contains(&quot;고전으로읽는인문학&quot;) or sub_in_pri1_text.Contains(&quot;예술과창조성&quot;)) and (sub_in_pri1_text.Contains(&quot;첨단과학의이해&quot;) or sub_in_pri1_text.Contains(&quot;환경과인간&quot;) or sub_in_pri1_text.Contains(&quot;창업입문&quot;) or sub_in_pri1_text.Contains(&quot;우주,생명,마음&quot;) or sub_in_pri1_text.Contains(&quot;SW프로그래밍입문&quot;) or sub_in_pri1_text.Contains(&quot;인공지능의세계&quot;) or sub_in_pri1_text.Contains(&quot;4차산업혁명의이해&quot;))]" sap2010:WorkflowViewState.IdRef="If_27">
                                                              <If.Then>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_129">
                                                                  <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_261" SheetName="Sheet1" Text="공통핵심교양" />
                                                                  <ui:ExcelWriteCell Cell="B5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_262" SheetName="Sheet1" Text="이수 확인되셨습니다." />
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_121">
                                                                  <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_245" SheetName="Sheet1" Text="공통핵심교양" />
                                                                  <ui:ExcelWriteCell Cell="B5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_246" SheetName="Sheet1" Text="이수가 필요한 과목이 있습니다. 수강과목 및 필수수강정보 파일을 확인해주세요." />
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <If Condition="[major = &quot;경영정보&quot;]" sap2010:WorkflowViewState.IdRef="If_32">
                                                              <If.Then>
                                                                <If Condition="[sub_in_pri2_text.Contains(&quot;미시경제학원론&quot;) and sub_in_pri2_text.Contains(&quot;경상통계학&quot;) and sub_in_pri2_text.Contains(&quot;경영정보&quot;) and sub_in_pri2_text.Contains(&quot;컴퓨터프로그래밍&quot;) and sub_in_pri2_text.Contains(&quot;인적자원관리&quot;) and sub_in_pri2_text.Contains(&quot;회계원리&quot;) and sub_in_pri2_text.Contains(&quot;마케팅원론&quot;) and sub_in_pri2_text.Contains(&quot;생산운영관리&quot;) and sub_in_pri2_text.Contains(&quot;재무관리원론&quot;)]" sap2010:WorkflowViewState.IdRef="If_28">
                                                                  <If.Then>
                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_122">
                                                                      <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_247" SheetName="Sheet1" Text="필수전공" />
                                                                      <ui:ExcelWriteCell Cell="B6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_248" SheetName="Sheet1" Text="이수 확인되셨습니다." />
                                                                    </Sequence>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_123">
                                                                      <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_249" SheetName="Sheet1" Text="필수전공" />
                                                                      <ui:ExcelWriteCell Cell="B6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_250" SheetName="Sheet1" Text="이수가 필요한 과목이 있습니다. 수강과목 및 필수수강정보 파일을 확인해주세요." />
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                              </If.Then>
                                                              <If.Else>
                                                                <If Condition="[major = &quot;국제통상&quot;]" sap2010:WorkflowViewState.IdRef="If_31">
                                                                  <If.Then>
                                                                    <If Condition="[sub_in_pri2_text.Contains(&quot;미시경제학원론&quot;) and sub_in_pri2_text.Contains(&quot;거시경제학원론&quot;) and sub_in_pri2_text.Contains(&quot;국제통상원론&quot;) and sub_in_pri2_text.Contains(&quot;글로벌경영전략&quot;) and sub_in_pri2_text.Contains(&quot;국제경영학&quot;) and (sub_in_pri2_text.Contains(&quot;회계원리&quot;) or sub_in_pri2_text.Contains(&quot;마케팅원론&quot;) or sub_in_pri2_text.Contains(&quot;생산운영관리&quot;) or sub_in_pri2_text.Contains(&quot;재무관리원론&quot;) or sub_in_pri2_text.Contains(&quot;인적자원관리&quot;))]" sap2010:WorkflowViewState.IdRef="If_29">
                                                                      <If.Then>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_124">
                                                                          <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_251" SheetName="Sheet1" Text="필수전공" />
                                                                          <ui:ExcelWriteCell Cell="B6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_252" SheetName="Sheet1" Text="이수 확인되셨습니다." />
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_125">
                                                                          <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_253" SheetName="Sheet1" Text="필수전공" />
                                                                          <ui:ExcelWriteCell Cell="B6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_254" SheetName="Sheet1" Text="이수가 필요한 과목이 있습니다. 수강과목 및 필수수강정보 파일을 확인해주세요." />
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <If Condition="[sub_in_pri2_text.Contains(&quot;미시경제학원론&quot;) and sub_in_pri2_text.Contains(&quot;경상통계학&quot;) and sub_in_pri2_text.Contains(&quot;회계원리&quot;) and sub_in_pri2_text.Contains(&quot;마케팅원론&quot;) and sub_in_pri2_text.Contains(&quot;생산운영관리&quot;) and sub_in_pri2_text.Contains(&quot;재무관리원론&quot;) and sub_in_pri2_text.Contains(&quot;인적자원관리&quot;) and sub_in_pri2_text.Contains(&quot;재무회계&quot;) and sub_in_pri2_text.Contains(&quot;국제통상원론&quot;) and sub_in_pri2_text.Contains(&quot;국제경영학&quot;) and sub_in_pri2_text.Contains(&quot;경영정보&quot;)]" sap2010:WorkflowViewState.IdRef="If_30">
                                                                      <If.Then>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_126">
                                                                          <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_255" SheetName="Sheet1" Text="필수전공" />
                                                                          <ui:ExcelWriteCell Cell="B6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_256" SheetName="Sheet1" Text="이수 확인되셨습니다." />
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_127">
                                                                          <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_257" SheetName="Sheet1" Text="필수전공" />
                                                                          <ui:ExcelWriteCell Cell="B6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_258" SheetName="Sheet1" Text="이수가 필요한 과목이 있습니다. 수강과목 및 필수수강정보 파일을 확인해주세요." />
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                  </If.Else>
                                                                </If>
                                                              </If.Else>
                                                            </If>
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </ui:ExcelApplicationScope.Body>
                                                    </ui:ExcelApplicationScope>
                                                  </FlowStep>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_5">
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
        <Sequence.Variables>
          <Variable x:TypeArguments="ui:GenericValue" Name="필요졸업학점" />
          <Variable x:TypeArguments="ui:GenericValue" Name="총취득학점" />
        </Sequence.Variables>
        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'TD'" sap2010:WorkflowViewState.IdRef="GetValue_1">
          <ui:GetValue.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="aa7aadefe17494c982b9d2f50e52aae5" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='8' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableCol='8' tableRow='3' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
          </ui:GetValue.Target>
          <ui:GetValue.Value>
            <OutArgument x:TypeArguments="ui:GenericValue">[필요졸업학점]</OutArgument>
          </ui:GetValue.Value>
        </ui:GetValue>
        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'TD'" sap2010:WorkflowViewState.IdRef="GetValue_2">
          <ui:GetValue.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="eaf218879157d80f7a5ef0f9e8ae5f26" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='7' tag='TABLE' /&gt;&lt;webctrl isleaf='1' tableCol='8' tableRow='4' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
          </ui:GetValue.Target>
          <ui:GetValue.Value>
            <OutArgument x:TypeArguments="ui:GenericValue">[총취득학점]</OutArgument>
          </ui:GetValue.Value>
        </ui:GetValue>
        <If Condition="[총취득학점 &lt;= 필요졸업학점]" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <If sap2010:WorkflowViewState.IdRef="If_3" />
          </If.Then>
          <If.Else>
            <If Condition="[lanCredit = &quot;Yes&quot;]" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="졸업불가 영어성적은 통과" TopMost="True" />
              </If.Then>
              <If.Else>
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="졸업불가 영어성적도 미달" TopMost="True" />
              </If.Else>
            </If>
          </If.Else>
        </If>
      </Sequence>
    </FlowStep>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_12">
      <ui:StartProcess Arguments="{x:Null}" FileName="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
    </FlowStep>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_14">
      <ui:BuildDataTable DataTable="{x:Null}" DisplayName="Build Data Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Column1&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Column2&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Column1&gt;text&lt;/Column1&gt;&#xA;    &lt;Column2&gt;1&lt;/Column2&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;" />
    </FlowStep>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_45">
      <Sequence DisplayName="폴더확인시키기" sap2010:WorkflowViewState.IdRef="Sequence_63">
        <ui:CloseApplication DisplayName="Close Application 'iexplore.exe 명지대학교'" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
          <ui:CloseApplication.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="d901475141512988c5d87a8aec6e7f87" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;" WaitForReady="INTERACTIVE" />
          </ui:CloseApplication.Target>
        </ui:CloseApplication>
        <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="r" KeyModifiers="Win" SendWindowMessages="False" SpecialKey="False">
          <ui:SendHotkey.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
          </ui:SendHotkey.Target>
        </ui:SendHotkey>
        <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into 'Edit'" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_7" SendWindowMessages="False" SimulateType="False" Text="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회[k(enter)]&quot;]">
          <ui:TypeInto.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="dbbf2f96d6f9ee0004090c093b0ef6a7" Selector="&lt;wnd app='explorer.exe' cls='#32770' title='실행' /&gt;&lt;wnd ctrlid='12298' /&gt;&lt;wnd ctrlid='1001' /&gt;" WaitForReady="INTERACTIVE" />
          </ui:TypeInto.Target>
        </ui:TypeInto>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_34" Text="[studentCode + &quot; 졸업사정조회 파일을 확인해 주세요.&quot;]" TopMost="True" />
      </Sequence>
    </FlowStep>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_47">
      <Sequence DisplayName="필수과목 수강 여부" sap2010:WorkflowViewState.IdRef="Sequence_67">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="subject1" />
          <Variable x:TypeArguments="sd:DataTable" Name="grade1" />
          <Variable x:TypeArguments="sd:DataTable" Name="subject2" />
        </Sequence.Variables>
        <ui:InputDialog Options="{x:Null}" DisplayName="Input Dialog" sap2010:WorkflowViewState.IdRef="InputDialog_5" IsPassword="False" Label="2" Title="2">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="ui:GenericValue">[studentCode]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <Sequence DisplayName="수강했던 과목" sap2010:WorkflowViewState.IdRef="Sequence_66">
          <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Attach Browser '          Page'" sap2010:WorkflowViewState.IdRef="BrowserScope_8" InformativeScreenshot="330c60bb173e95507ae3d5410f0d44ff" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;">
            <ui:BrowserScope.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_64">
                  <ui:ExtractData NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[subject1]" DelayBetweenPagesMS="300" DisplayName="수강했던 과목" ExtractMetadata="&lt;extract&gt;&lt;column name='교과목명' attr='text' exact='1'&gt;&lt;webctrl tag='body' idx='1' /&gt;&lt;webctrl tag='div' class='tablist' idx='1' /&gt;&lt;webctrl tag='div' class='tab tab-1' idx='1' /&gt;&lt;webctrl tag='div' /&gt;&lt;webctrl tag='table' class='default' idx='1' /&gt;&lt;webctrl tag='tbody' idx='1' /&gt;&lt;webctrl tag='tr' class='colorrow' /&gt;&lt;webctrl tag='td' idx='2' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap2010:WorkflowViewState.IdRef="ExtractData_11" MaxNumberOfResults="100">
                    <ui:ExtractData.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="b1111c23af8819df76a253151078167b" Selector="&lt;webctrl idx='4' tag='HTML' /&gt;" WaitForReady="COMPLETE" />
                    </ui:ExtractData.Target>
                  </ui:ExtractData>
                  <ui:ExtractData NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[grade1]" DelayBetweenPagesMS="300" DisplayName="수강했던 성적" ExtractMetadata="&lt;extract&gt;&lt;column name='성적' attr='text' exact='1'&gt;&lt;webctrl tag='body' idx='1' /&gt;&lt;webctrl tag='div' class='tablist' idx='1' /&gt;&lt;webctrl tag='div' class='tab tab-1' idx='1' /&gt;&lt;webctrl tag='div' /&gt;&lt;webctrl tag='table' class='default' idx='1' /&gt;&lt;webctrl tag='tbody' idx='1' /&gt;&lt;webctrl tag='tr' class='colorrow' /&gt;&lt;webctrl tag='td' idx='6' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap2010:WorkflowViewState.IdRef="ExtractData_12" MaxNumberOfResults="100">
                    <ui:ExtractData.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="773a8e9f667a6e56126ec74e9b584dfd" Selector="&lt;webctrl idx='4' tag='HTML' /&gt;" WaitForReady="COMPLETE" />
                    </ui:ExtractData.Target>
                  </ui:ExtractData>
                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'FONT'" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7ab6191b587cfc0a6b2e640af1ce4d11" Selector="&lt;webctrl aaname='수강성적조회' parentid='T_102' tag='FONT' /&gt;" WaitForReady="INTERACTIVE" />
                    </ui:Click.Target>
                  </ui:Click>
                  <ui:ExtractData NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[subject2]" DelayBetweenPagesMS="300" DisplayName="수강중인 과목" ExtractMetadata="&lt;extract&gt;&lt;column name='교과목명' attr='text' exact='1'&gt;&lt;webctrl tag='body' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='table' class='default' idx='1' /&gt;&lt;webctrl tag='tbody' idx='1' /&gt;&lt;webctrl tag='tr' class='lecture colorrow' /&gt;&lt;webctrl tag='td' idx='2' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap2010:WorkflowViewState.IdRef="ExtractData_13" MaxNumberOfResults="100">
                    <ui:ExtractData.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="d8d7a68328f9c690be1ff3433bdaeacd" Selector="&lt;webctrl idx='4' tag='HTML' /&gt;" WaitForReady="COMPLETE" />
                    </ui:ExtractData.Target>
                  </ui:ExtractData>
                  <ui:ExtractData NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[grade2]" DelayBetweenPagesMS="300" DisplayName="수강중인 성적" ExtractMetadata="&lt;extract&gt;&lt;column name='성적' attr='text' exact='1'&gt;&lt;webctrl tag='body' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='table' class='default' idx='1' /&gt;&lt;webctrl tag='tbody' idx='1' /&gt;&lt;webctrl tag='tr' class='lecture colorrow' /&gt;&lt;webctrl tag='td' idx='4' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap2010:WorkflowViewState.IdRef="ExtractData_14" MaxNumberOfResults="100">
                    <ui:ExtractData.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9fae827610cad93f572d270aa7c323b9" Selector="&lt;webctrl idx='4' tag='HTML' /&gt;" WaitForReady="COMPLETE" />
                    </ui:ExtractData.Target>
                  </ui:ExtractData>
                </Sequence>
              </ActivityAction>
            </ui:BrowserScope.Body>
          </ui:BrowserScope>
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_18" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 성적&quot;]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_65">
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[subject1]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_16" SheetName="Sheet1" StartingCell="A1" />
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[grade1]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_17" SheetName="Sheet1" StartingCell="B1" />
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[subject2]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_18" SheetName="Sheet2" StartingCell="A1" />
                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[grade2]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_19" SheetName="Sheet2" StartingCell="B1" />
                  <ui:ExcelReadRange DataTable="{x:Null}" AddHeaders="True" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="B1:B2" SheetName="Sheet2" />
                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[grade2]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_69">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[grade2.Rows(grade2.Rows.IndexOf(row))(0)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[row.Item(0).ToString.Replace("Null","A+")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[grade2]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_20" SheetName="Sheet2" StartingCell="B1" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
          </ui:ExcelApplicationScope>
        </Sequence>
      </Sequence>
    </FlowStep>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_48">
      <cv:AssertUnitTest Assert="[Assert.AreEqual(test1, test2)]" DisplayName="Assert unit test" sap2010:WorkflowViewState.IdRef="AssertUnitTest_1" />
    </FlowStep>
    <x:Reference>__ReferenceID16</x:Reference>
    <x:Reference>__ReferenceID17</x:Reference>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_58">
      <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'IMG '" sap2010:WorkflowViewState.IdRef="GetValue_29">
        <ui:GetValue.Target>
          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7a549c394973a25b369f45e4ef5e2dc2" Selector="&lt;html title='SSO 통합 로그인' /&gt;&lt;webctrl tag='FONT' /&gt;" WaitForReady="INTERACTIVE" />
        </ui:GetValue.Target>
        <ui:GetValue.Value>
          <OutArgument x:TypeArguments="ui:GenericValue">[login]</OutArgument>
        </ui:GetValue.Value>
      </ui:GetValue>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID18" sap2010:WorkflowViewState.IdRef="FlowStep_57">
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_38" Text="[login]" TopMost="True" />
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID18</x:Reference>
    <x:Reference>__ReferenceID19</x:Reference>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_65">
      <Sequence DisplayName="필수교과 정보생성" sap2010:WorkflowViewState.IdRef="Sequence_98">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="major" />
        </Sequence.Variables>
        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'TD'" sap2010:WorkflowViewState.IdRef="GetValue_32">
          <ui:GetValue.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="7b6e9f25d2eb135a1c2fc96c7109ada9" Selector="&lt;html title='명지대학교 종합정보시스템' /&gt;&lt;webctrl idx='6' tag='TABLE' /&gt;&lt;webctrl tableCol='2' tableRow='2' tag='TD' /&gt;" WaitForReady="INTERACTIVE" />
          </ui:GetValue.Target>
          <ui:GetValue.Value>
            <OutArgument x:TypeArguments="x:String">[major]</OutArgument>
          </ui:GetValue.Value>
        </ui:GetValue>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_26" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 필수수강정보.xlsx&quot;]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_94">
                <Sequence DisplayName="공통필수수강" sap2010:WorkflowViewState.IdRef="Sequence_92">
                  <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_149" SheetName="공통필수수강" Text="공통필수수강" />
                  <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_150" SheetName="공통필수수강" Text="성경개론" />
                  <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_151" SheetName="공통필수수강" Text="성서의이해" />
                  <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_152" SheetName="공통필수수강" Text="채플" />
                  <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_153" SheetName="공통필수수강" Text="현대사회와기독교윤리" />
                  <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_154" SheetName="공통필수수강" Text="종교와과학" />
                  <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_155" SheetName="공통필수수강" Text="기독교와문화" />
                  <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_156" SheetName="공통필수수강" Text="글쓰기" />
                  <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_157" SheetName="공통필수수강" Text="발표와토의" />
                  <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_158" SheetName="공통필수수강" Text="철학과인간" />
                  <ui:ExcelWriteCell Cell="A11" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_159" SheetName="공통필수수강" Text="한국근현대사의이해" />
                  <ui:ExcelWriteCell Cell="A12" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_160" SheetName="공통필수수강" Text="역사와문명" />
                  <ui:ExcelWriteCell Cell="B12" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_161" SheetName="공통필수수강" Text="중 택1" />
                  <ui:ExcelWriteCell Cell="B9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_162" SheetName="공통필수수강" Text="중 택1" />
                  <ui:ExcelWriteCell Cell="B7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_163" SheetName="공통필수수강" Text="중 택1" />
                  <ui:ExcelWriteCell Cell="B4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_164" SheetName="공통필수수강" Text="4회 수강" />
                  <ui:ExcelWriteCell Cell="B2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_165" SheetName="공통필수수강" Text="폐지(성서의이해로 대체)" />
                </Sequence>
                <Sequence DisplayName="공통핵심교양" sap2010:WorkflowViewState.IdRef="Sequence_93">
                  <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_166" SheetName="공통핵심교양" Text="공통핵심교양" />
                  <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_167" SheetName="공통핵심교양" Text="시계화와사회변화" />
                  <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_168" SheetName="공통핵심교양" Text="민주주의와현대사회" />
                  <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_169" SheetName="공통핵심교양" Text="여성문제의이해" />
                  <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_170" SheetName="공통핵심교양" Text="여성·소수자·공동체" />
                  <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_171" SheetName="공통핵심교양" Text="글로벌문화" />
                  <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_172" SheetName="공통핵심교양" Text="통섭의예술" />
                  <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_173" SheetName="공통핵심교양" Text="동서문화의이해" />
                  <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_174" SheetName="공통핵심교양" Text="한국전통문화의이해" />
                  <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_175" SheetName="공통핵심교양" Text="예술과사회" />
                  <ui:ExcelWriteCell Cell="A11" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_176" SheetName="공통핵심교양" Text="고전으로읽는인문학" />
                  <ui:ExcelWriteCell Cell="A12" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_177" SheetName="공통핵심교양" Text="예술과창조성" />
                  <ui:ExcelWriteCell Cell="A13" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_178" SheetName="공통핵심교양" Text="첨단과학의이해" />
                  <ui:ExcelWriteCell Cell="A14" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_179" SheetName="공통핵심교양" Text="환경과인간" />
                  <ui:ExcelWriteCell Cell="A15" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_180" SheetName="공통핵심교양" Text="창업입문" />
                  <ui:ExcelWriteCell Cell="A16" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_181" SheetName="공통핵심교양" Text="우주,생명,마음" />
                  <ui:ExcelWriteCell Cell="A17" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_182" SheetName="공통핵심교양" Text="SW프로그래밍입문" />
                  <ui:ExcelWriteCell Cell="A18" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_183" SheetName="공통핵심교양" Text="인공지능의세계" />
                  <ui:ExcelWriteCell Cell="A19" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_184" SheetName="공통핵심교양" Text="4차산업혁명의이해" />
                  <ui:ExcelWriteCell Cell="B5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_185" SheetName="공통핵심교양" Text="중 택1" />
                  <ui:ExcelWriteCell Cell="B12" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_186" SheetName="공통핵심교양" Text="중 택1" />
                  <ui:ExcelWriteCell Cell="B19" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_187" SheetName="공통핵심교양" Text="중 택1" />
                </Sequence>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
        <If Condition="[major.Contains(&quot;경영정보&quot;)]" sap2010:WorkflowViewState.IdRef="If_16">
          <If.Then>
            <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_27" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 필수수강정보.xlsx&quot;]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="경영정보학과 필수전공" sap2010:WorkflowViewState.IdRef="Sequence_95">
                    <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_188" SheetName="경영정보학과 필수전공" Text="경영정보학과 필수전공" />
                    <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_189" SheetName="경영정보학과 필수전공" Text="미시경제학원론" />
                    <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_190" SheetName="경영정보학과 필수전공" Text="경상통계학" />
                    <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_191" SheetName="경영정보학과 필수전공" Text="경영정보" />
                    <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_192" SheetName="경영정보학과 필수전공" Text="컴퓨터프로그래밍" />
                    <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_193" SheetName="경영정보학과 필수전공" Text="인적자원관리" />
                    <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_194" SheetName="경영정보학과 필수전공" Text="회계원리" />
                    <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_195" SheetName="경영정보학과 필수전공" Text="마케팅원론" />
                    <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_196" SheetName="경영정보학과 필수전공" Text="생산운영관리" />
                    <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_197" SheetName="경영정보학과 필수전공" Text="재무관리원론" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </If.Then>
          <If.Else>
            <If Condition="[major.Contains(&quot;국제통상&quot;)]" sap2010:WorkflowViewState.IdRef="If_15">
              <If.Then>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_28" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 필수수강정보xlsx&quot;]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="국제통상학과 필수전공" sap2010:WorkflowViewState.IdRef="Sequence_96">
                        <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_198" SheetName="국제통상학과 필수전공" Text="국제통상학과 필수전공" />
                        <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_199" SheetName="국제통상학과 필수전공" Text="미시경제학원론" />
                        <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_200" SheetName="국제통상학과 필수전공" Text="거시경제학원론" />
                        <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_201" SheetName="국제통상학과 필수전공" Text="국제통상원론" />
                        <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_202" SheetName="국제통상학과 필수전공" Text="글로벌경영전략" />
                        <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_203" SheetName="국제통상학과 필수전공" Text="국제경영학" />
                        <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_204" SheetName="국제통상학과 필수전공" Text="회계원리" />
                        <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_205" SheetName="국제통상학과 필수전공" Text="마케팅원론" />
                        <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_206" SheetName="국제통상학과 필수전공" Text="재무관리원론" />
                        <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_207" SheetName="국제통상학과 필수전공" Text="인적자원관리" />
                        <ui:ExcelWriteCell Cell="A11" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_208" SheetName="국제통상학과 필수전공" Text="생산운영관리" />
                        <ui:ExcelWriteCell Cell="B7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_209" SheetName="국제통상학과 필수전공" Text="이하 과목 중 택 4" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </If.Then>
              <If.Else>
                <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_29" WorkbookPath="[&quot;C:\&quot; + studentCode + &quot; 졸업사정조회\수강과목 및 필수수강정보.xlsx&quot;]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_97">
                        <ui:ExcelWriteCell Cell="A1" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_210" SheetName="경영학과 필수전공" Text="경영학과 필수전공" />
                        <ui:ExcelWriteCell Cell="A2" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_211" SheetName="경영학과 필수전공" Text="미시경제학원론" />
                        <ui:ExcelWriteCell Cell="A3" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_212" SheetName="경영학과 필수전공" Text="경상통계학" />
                        <ui:ExcelWriteCell Cell="A4" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_213" SheetName="경영학과 필수전공" Text="회계원리" />
                        <ui:ExcelWriteCell Cell="A5" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_214" SheetName="경영학과 필수전공" Text="마케팅원론" />
                        <ui:ExcelWriteCell Cell="A6" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_215" SheetName="경영학과 필수전공" Text="생산운영관리" />
                        <ui:ExcelWriteCell Cell="A7" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_216" SheetName="경영학과 필수전공" Text="재무관리원론" />
                        <ui:ExcelWriteCell Cell="A8" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_217" SheetName="경영학과 필수전공" Text="인적자원관리" />
                        <ui:ExcelWriteCell Cell="A9" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_218" SheetName="경영학과 필수전공" Text="재무회계" />
                        <ui:ExcelWriteCell Cell="A10" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_219" SheetName="경영학과 필수전공" Text="국제통상원론" />
                        <ui:ExcelWriteCell Cell="A11" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_220" SheetName="경영학과 필수전공" Text="국제경영학" />
                        <ui:ExcelWriteCell Cell="A12" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_221" SheetName="경영학과 필수전공" Text="경영정보" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </If.Else>
            </If>
          </If.Else>
        </If>
      </Sequence>
    </FlowStep>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_66">
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_30" WorkbookPath="C:\60141268 졸업사정조회\쩡이.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_111">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="동환이" />
                <Variable x:TypeArguments="x:String" Name="str" />
              </Sequence.Variables>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[동환이]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_28" SheetName="Sheet1">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
              </ui:ExcelReadRange>
              <ui:OutputDataTable DataTable="[동환이]" DisplayName="Output Data Table" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[str]" />
              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_41" Text="[str]" TopMost="True" />
              <If Condition="[str.Contains(&quot;경영정보&quot;) or str.Contains(&quot;미시경제학원론&quot;)]" sap2010:WorkflowViewState.IdRef="If_20">
                <If.Then>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_39" Text="이거아님" TopMost="True" />
                </If.Then>
                <If.Else>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_40" Text="이거나와야함" TopMost="True" />
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
      </ui:ExcelApplicationScope>
    </FlowStep>
    <x:Reference>__ReferenceID20</x:Reference>
    <sads:DebugSymbol.Symbol>dyRDOlxVc2Vyc1xpZGgwM1xEZXNrdG9wXHJwYVxNYWluLnhhbWymCEgD7w4PAgEBYQl2FAMBhQp5DaMBGAMB6wmmARHyARwDAdYJ9AFE9AFfAwHUCYYCGa4DJAMBuAixAx2KBSkDAdEHjQUhyAU8AwGlB8sFJbQGMAMB2ga3BinoBjQDAawG6wYt8Ac4AwHxA/MHMfUKPAMBvAH4CjXcC1ACAQb3ARn+ASICAQJjDWseAwGGCnsRkAEcAwHwCZgBFZ8BIAMB7AmoARXkASADAdwJ7AEZ7gEkAwHXCZgCG4UDJgMBngmGAxutAzYDAbkIuwMj3AMuAwGnCN4DVd4DigEDAaYI8QQr/ARGAwGfCOEDK7gENgMB9Ae6BF26BG4DAfIH1QQz6AROAwHiB70EM9AETgMB0geNBa4BjQXyAQMB0AeTBSfFBTIDAaYH0AUn3gUyAwGjB98FJ+YFNQMBnwfnBSezBiwDAdsGuAYr5wYwAwGtBuwGL/MGPQMBqAb0Bi+gB0oDAasFoQcv7wc0AwHyA/kHM/QKPgMBvQH4CtwB+Aq9AgMBuwH+CjvZC0YCAQf8AUT8AUgCAQX5AUX5AU0CAQNjwgFjqAIDAYcKfBOAASQDAYAKgQETiAEcAwH8CYkBE4kB1AEDAfoJigETjgEkAwH1CY8BE48B4gIDAfEJmQEXmQHCAQMB7gmaAReeASUDAe0JqQEX4wEiAwHdCe0BG+0B1gEDAdgJmQIdrAItAwHLCa0CHbQCKwMBxwm1Ah28AisDAcMJvQIdxAIrAwG/CcUCHcwCKwMBuwnNAh3UAisDAbcJ1QId3AIrAwGzCd0CHeQCKwMBrwnlAh3sAisDAasJ7QId9AIrAwGnCfUCHfwCKwMBown9Ah2EAysDAZ8JhgOmAYYD5QEDAZ0JjAMhqgMsAwG6CLwDJcMDLgMBtAjEAyXLAy4DAbAIzAMl0wMuAwGsCNQDJdsDLgMBqAjxBLYB8QSQAgMBpQj3BDH5BDwDAaAI5QMt7AM2AwGbCO0DLfQDNgMBlwj1Ay23BDUDAfUH1QS+AdUEmgIDAfEH2wQ55QREAwHjB70EvwG9BJsCAwHhB8MEOc0ERAMB0weYBSmYBdQBAwHLB5kFKZkFwgEDAccHmgUpxAU5AwGnB9wFugHcBZsCAwGkB+QFWuQFZAMBoAfhBboB4QW3AgMBogfnBTXnBYABAwHcBukFK/8FNgMBiQeCBiuxBjADAd0GuAY5uAZYAwGuBroGL84GSgMBxQbRBi/lBkoDAbAG8QZb8QZiAwGpBu4GwgHuBsECAwGrBvQGywH0BpUCAwGnBvoGNZ0HQAMBrAWhBz2hB2EDAfMDowcztwdOAwH2BLoHM+0HOAMB9QP6BzWnCEcDAcwDqAg18wpQAwG+AYQLPYQL2QEDAbYBhQs9hQvbAQMBsQGGCz2GC9sBAwGsAYcLPZQLQgMBjgGVCz2iC0ICAWijCz3YC0ICAQh8mgF8tgEDAYQKfkZ+UwMBggp8vQF8wwEDAYEKhgE+hgFjAwH/CYMBP4MBSQMB/QmJAZoBiQHRAQMB+wmKAaIBigG8AQMB+QmMAUaMAVADAfcJigHDAYoBzAEDAfYJjwGvAY8B0AIDAfQJjwFSjwFfAwHyCZkBrQGZAbABAwHvCaoBGa4BJwMB6AmvARmzAScDAeUJtAEZwgEkAwHjCcMBGeIBJAMB3gntAbEB7QHEAQMB2wntAVftAWEDAdkJowKWAaMC4QEDAdMJqgJJqgJVAwHRCZ8CI58CkAIDAcwJsgJQsgJbAwHICa8CsAGvAqgCAwHKCboCULoCXQMBxAm3ArABtwK6AgMBxgnCAlDCAlwDAcAJvwKwAb8CugIDAcIJygJQygJcAwG8CccCsAHHArUCAwG+CdICUNICWwMBuAnPArABzwK1AgMBugnaAlDaAlwDAbQJ1wKwAdcCtQIDAbYJ4gJQ4gJbAwGwCd8CsAHfArUCAwGyCeoCUOoCWwMBrAnnArAB5wK6AgMBrgnyAlDyAloDAagJ7wKwAe8CugIDAaoJ+gJQ+gJeAwGkCfcCsAH3AroCAwGmCYIDUIIDXQMBoAn/ArAB/wK6AgMBogmNAyOpAy4DAbsIwQNXwQNpAwG3CL4DWL4DYwMBtQjJA1fJA2gDAbMIxgNYxgNjAwGxCNEDV9EDbAMBrwjOA1jOA2YDAa0I2QNX2QNrAwGrCNYDWNYDZgMBqQj4BDP4BPABAwGhCOoDV+oDWAMBngjnA1jnA2IDAZwI8gNZ8gNeAwGaCO8DWu8DYQMBmAj2Ay+2BDoDAfcH9QNo9QORAQMB9gfcBDvcBMkBAwHtB90EO90E6gEDAekH3gQ75ARPAwHkB8QEO8QEyQEDAd0HxQQ7xQTWAQMB2QfGBDvMBE8DAdQHmAVYmAVmAwHOB5gFugGYBb4BAwHNB5gFyQGYBdEBAwHMB5kFQZkFRQMBygeZBasBmQW/AQMByQeZBZ0BmQWlAQMByAeaBVqaBWgDAcUHoAUvwQU6AwGoB+oFLf4FSAMBigeCBjmCBoQBAwHeBoQGL5gGSgMB9AabBi+vBkoDAd8GugbLAboGpwIDAdkGwAY1ywZAAwHGBtEGywHRBqcCAwHEBtcGNeIGQAMBsQb7BjeHB0IDAfoFiAc3nAdCAwGtBaMH5QGjB68CAwGqBakHObQHRAMB9wS6B0G6B2UDAfYDvAc30gdSAwG3BNUHN+sHUgMB+AP6B7cC+gfdAgMB8AOACDukCEYDAc0DqAjmAagIsAIDAcsDrgg78ApGAwG/AYQLwwGEC9YBAwG5AYQLW4QLaQMBtwGFC8QBhQvYAQMBtAGFC1uFC2oDAbIBhgvEAYYL2AEDAa8BhgtbhgtqAwGtAYcLS4cLswQDAY8BiQtBjAtMAwGjAY8LQZILTAMBmgGVC0uVC9oHAgFplwtBmgtMAwGFAZ0LQaALTAIBfKMLS6MLZwIBCaULQbILRgIBS7ULQdYLRgIBC6wBrAGsAfgBAwHqCaoBswKqAcICAwHpCbEBrAGxAfgBAwHnCa8BswKvAdgCAwHmCcABrAHAAZACAwHkCcQBG9IBJgMB4QnTARvhASYDAd8JnwKKAp8CjQIDAdAJnwLLAZ8C1AEDAc4JnwLtAZ8C8gEDAc0JjgMllgMwAwH/CJcDJaYDMAMBxginAyWnA80BAwHBCKgDJagDzAEDAbwI+ARL+ARPAwGkCPgEtQH4BO0BAwGjCPgEpwH4BK8BAwGiCPoDMYEEOgMBkwiCBDGtBDkDAf0HrgQxtQQ6AwH4B9wEU9wEVwMB8AfcBL0B3ATGAQMB7wfcBK8B3AS3AQMB7gfdBFPdBFcDAewH3QS9Ad0E5wEDAesH3QSvAd0EtwEDAeoH3gRr3gR1AwHnB+EEQeEEcAMB5gfeBMwB3gTUAQMB5QfEBFPEBFcDAeAHxAS9AcQExgEDAd8HxASvAcQEtwEDAd4HxQRTxQRXAwHcB8UEvQHFBNMBAwHbB8UErwHFBLcBAwHaB8YEasYEdAMB1wfJBEHJBHADAdYHxgTLAcYE0wEDAdUHpgUxrQU6AwHBB64FMbIFQQMBuwezBTG3BUEDAbUHuAUxvwU6AwGvB8AFMcAF8AEDAakH6gXJAeoFpQIDAZ4H8AUz+wU+AwGLB4QGywGEBqcCAwGIB4oGNZUGQAMB9QabBssBmwanAgMB8wahBjWsBkADAeAGwQY3wQbqAQMB1AbCBjfCBsgBAwHQBsMGN8MGzwEDAcwGxAY3ygZLAwHHBtgGN9gG6gEDAb8G2QY32QbIAQMBuwbaBjfaBs8BAwG3BtsGN+EGSwMBsgb8Bjn8BsYBAwGjBv0GOf0GxAEDAZ8G/gY5/gbFAQMBmwb/Bjn/BsoBAwGXBoAHOYAHxQEDAZMGgQc5gQfGAQMBjwaCBzmCB8MBAwGLBoMHOYMHxQEDAYcGhAc5hAfFAQMBgwaFBzmFB8oBAwH/BYYHOYYHxgEDAfsFiQc5iQfGAQMB9gWKBzmKB8gBAwHyBYsHOYsHyQEDAe4FjAc5jAfHAQMB6gWNBzmNB8oBAwHmBY4HOY4HxQEDAeIFjwc5jwfFAQMB3gWQBzmQB8cBAwHaBZEHOZEHyQEDAdYFkgc5kgfHAQMB0gWTBzmTB8sBAwHOBZQHOZQHyAEDAcoFlQc5lQfJAQMBxgWWBzmWB8cBAwHCBZcHOZcHxgEDAb4FmAc5mAfKAQMBugWZBzmZB8sBAwG2BZoHOZoHyQEDAbIFmwc5mwfLAQMBrgWqBzuqB+MBAwGlBasHO6sH3wEDAaAFrAc7rAfdAQMBmwWtBzutB9wBAwGWBa4HO64H4AEDAZEFrwc7rwfeAQMBjAWwBzuwB9wBAwGHBbEHO7EH3QEDAYIFsgc7sgfeAQMB/QSzBzuzB98BAwH4BLwH0wG8B5wCAwH1BMIHPc8HSAMBuATVB+kB1QezAgMBtgTbBz3oB0gDAfkDgQg9hQhOAwHoA4YIPYoITgMB4AOLCD2ZCEgDAd4Dmgg9nghOAwHWA58IPaMITgMBzgOzCD2zCO4BAwHGA7QIPbQI7AEDAcEDtQg9uwhRAwG8A7wIPc4IUgMBtQPPCD3PCMkBAwGxA9AIPdAI8QEDAawD0Qg90QjuAQMBqQPSCD3SCO8BAwGkA9MIPfEJSAMBqwLyCT34CVEDAaYC+Qk9gApGAwGiAoEKPYEK9AEDAZ8Cggo9ggrVAQMBmwKDCj2DCvkBAwGWAoQKPYoKUQMBkQKLCj3vCkgDAcABigtDigvPAQMBqAGLC0OLC9YBAwGkAZALQ5ALzwEDAZ8BkQtDkQv2AQMBmwGYC0OYC9EBAwGKAZkLQ5kL1gEDAYYBngtDngvRAQMBgQGfC0OfC/YBAgF9pQtPpQuNBAIBTKcLRaoLUAIBX60LRbALUAIBVrULT7ULawIBDLcLRcQLSgIBLccLRdQLSgIBDtABrgHQAf4BAwHiCd8BrgHfAZECAwHgCY8DJ48DsQEDAZkJkAMnkAO5AQMBlAmRAyeRA7oBAwGQCZIDJ5IDuQEDAYwJkwMnkwO5AQMBiAmUAyeUA7gBAwGECZUDJ5UDuwEDAYAJmAMnmAOwAQMB+wiZAyeZA7IBAwH3CJoDJ5oDsAEDAfMImwMnmwOyAQMB7wicAyecA7QBAwHrCJ0DJ50DsAEDAecIngMnngOxAQMB4wifAyefA7QBAwHfCKADJ6ADuQEDAdsIoQMnoQO6AQMB1wiiAyeiA7kBAwHTCKMDJ6MDuQEDAc8IpAMnpAO4AQMBywilAyelA7sBAwHHCKcDVKcDXQMBxAinA7ABpwO3AQMBwwinA8IBpwPKAQMBwgioA1SoA1wDAb8IqAOvAagDtgEDAb4IqAPBAagDyQEDAb0I/wNb/wNcAwGWCPwDXPwDaQMBlAiDBDOsBD4DAf8HggRsggSbAQMB/gezBFuzBGkDAfsHsARcsARmAwH5B6sFW6sFewMBxAeoBVyoBWYDAcIHsAVdsAVlAwG/B64FxgGuBc0BAwG9B64FdK4FdwMBvAe1BV21BWUDAbkHswXGAbMFzQEDAbcHswV0swV3AwG2B70FXL0FbQMBsge6BV26BWUDAbAHwAVJwAV0AwGtB8AF2gHABe0BAwGrB8AFzAHABdQBAwGqB/EFNfEF5wEDAZkH8gU18gXHAQMBlQfzBTXzBdEBAwGRB/QFNfoFSQMBjAeLBjeLBukBAwGDB4wGN4wGyQEDAf8GjQY3jQbPAQMB+waOBjeUBksDAfYGogY3ogbpAQMB7gajBjejBskBAwHqBqQGN6QGzgEDAeYGpQY3qwZLAwHhBsEG4wHBBucBAwHYBsEGaMEGcwMB1gbBBs0BwQbVAQMB1QbCBk/CBlMDAdMGwga5AcIGxQEDAdIGwgarAcIGswEDAdEGwwZPwwZTAwHPBsMGuQHDBswBAwHOBsMGqwHDBrMBAwHNBsQGZ8QGdgMBygbHBj3HBmwDAckGxAbNAcQG1QEDAcgG2AbjAdgG5wEDAcMG2AZo2AZzAwHBBtgGzQHYBtUBAwHABtkGT9kGUwMBvgbZBrkB2QbFAQMBvQbZBqsB2QazAQMBvAbaBk/aBlMDAboG2ga5AdoGzAEDAbkG2garAdoGswEDAbgG2wZn2wZ2AwG1Bt4GPd4GbAMBtAbbBs4B2wbWAQMBswb8BlH8BlUDAaYG/Aa7AfwGwwEDAaUG/AatAfwGtQEDAaQG/QZR/QZVAwGiBv0GuwH9BsEBAwGhBv0GrQH9BrUBAwGgBv4GUf4GVQMBngb+BrsB/gbCAQMBnQb+Bq0B/ga1AQMBnAb/BlH/BlUDAZoG/wa7Af8GxwEDAZkG/watAf8GtQEDAZgGgAdRgAdVAwGWBoAHuwGAB8IBAwGVBoAHrQGAB7UBAwGUBoEHUYEHVQMBkgaBB7sBgQfDAQMBkQaBB60BgQe1AQMBkAaCB1GCB1UDAY4Ggge7AYIHwAEDAY0GggetAYIHtQEDAYwGgwdRgwdVAwGKBoMHuwGDB8IBAwGJBoMHrQGDB7UBAwGIBoQHUYQHVQMBhgaEB7sBhAfCAQMBhQaEB60BhAe1AQMBhAaFB1GFB1YDAYIGhQe8AYUHxwEDAYEGhQeuAYUHtgEDAYAGhgdRhgdWAwH+BYYHvAGGB8MBAwH9BYYHrgGGB7YBAwH8BYkHUYkHVQMB+QWJB7sBiQfDAQMB+AWJB60BiQe1AQMB9wWKB1GKB1UDAfUFige7AYoHxQEDAfQFigetAYoHtQEDAfMFiwdRiwdVAwHxBYsHuwGLB8YBAwHwBYsHrQGLB7UBAwHvBYwHUYwHVQMB7QWMB7sBjAfEAQMB7AWMB60BjAe1AQMB6wWNB1GNB1UDAekFjQe7AY0HxwEDAegFjQetAY0HtQEDAecFjgdRjgdVAwHlBY4HuwGOB8IBAwHkBY4HrQGOB7UBAwHjBY8HUY8HVQMB4QWPB7sBjwfCAQMB4AWPB60Bjwe1AQMB3wWQB1GQB1UDAd0FkAe7AZAHxAEDAdwFkAetAZAHtQEDAdsFkQdRkQdVAwHZBZEHuwGRB8YBAwHYBZEHrQGRB7UBAwHXBZIHUZIHVgMB1QWSB70BkgfEAQMB1AWSB68Bkge3AQMB0wWTB1GTB1YDAdEFkwe9AZMHyAEDAdAFkwevAZMHtwEDAc8FlAdRlAdWAwHNBZQHvQGUB8UBAwHMBZQHrwGUB7cBAwHLBZUHUZUHVgMByQWVB70BlQfGAQMByAWVB68BlQe3AQMBxwWWB1GWB1YDAcUFlge9AZYHxAEDAcQFlgevAZYHtwEDAcMFlwdRlwdWAwHBBZcHvQGXB8MBAwHABZcHrwGXB7cBAwG/BZgHUZgHVgMBvQWYB70BmAfHAQMBvAWYB68BmAe3AQMBuwWZB1GZB1YDAbkFmQe9AZkHyAEDAbgFmQevAZkHtwEDAbcFmgdRmgdWAwG1BZoHvQGaB8YBAwG0BZoHrwGaB7cBAwGzBZsHUZsHVgMBsQWbB70BmwfIAQMBsAWbB68Bmwe3AQMBrwWqB1OqB1cDAakFqgfTAaoH4AEDAagFqgewAaoHzQEDAaYFqwdTqwdXAwGkBasH0wGrB9wBAwGjBasHsAGrB80BAwGhBawHU6wHVwMBnwWsB9MBrAfaAQMBngWsB7ABrAfNAQMBnAWtB1OtB1cDAZoFrQfTAa0H2QEDAZkFrQewAa0HzQEDAZcFrgdTrgdXAwGVBa4H0wGuB90BAwGUBa4HsAGuB80BAwGSBa8HU68HVwMBkAWvB9MBrwfbAQMBjwWvB7ABrwfNAQMBjQWwB1OwB1cDAYsFsAfTAbAH2QEDAYoFsAewAbAHzQEDAYgFsQdTsQdXAwGGBbEH0wGxB9oBAwGFBbEHsAGxB80BAwGDBbIHU7IHVwMBgQWyB9MBsgfbAQMBgAWyB7ABsgfNAQMB/gSzB1OzB1gDAfwEswfUAbMH3AEDAfsEswexAbMHzgEDAfkEwwc/wwfnAQMB8ATEBz/EB+MBAwHrBMUHP8UH4wEDAeYExgc/xgfiAQMB4QTHBz/HB+MBAwHcBMgHP8gH4QEDAdcEyQc/yQfgAQMB0gTKBz/KB+EBAwHNBMsHP8sH4gEDAcgEzAc/zAfjAQMBwwTNBz/NB+MBAwG+BM4HP84H5wEDAbkE3Ac/3AflAQMBsQTdBz/dB+MBAwGsBN4HP94H4QEDAacE3wc/3wfgAQMBogTgBz/gB+EBAwGdBOEHP+EH4gEDAZgE4gc/4gfiAQMBkwTjBz/jB+IBAwGOBOQHP+QH4AEDAYkE5Qc/5QfjAQMBhATmBz/mB+IBAwH/A+cHP+cH4QEDAfoDgQjJBYEIzgUDAe8DgwjQAYMI9gEDAe4DgQirAYEIsAEDAe0DgQh5gQh/AwHsA4EIigGBCJYBAwHqA4EI1wGBCIUFAwHpA4YIxQWGCMoFAwHnA4gI0AGICPYBAwHmA4YIqQGGCK4BAwHlA4YIeYYIfwMB5AOGCIoBhgiUAQMB4gOGCNUBhgiBBQMB4QOXCNABlwiPAgMB3wOaCPEEmgj2BAMB3QOcCNABnAj2AQMB3AOaCKsBmgiwAQMB2wOaCHmaCH8DAdoDmgiKAZoIlgEDAdgDmgjXAZoIrQQDAdcDnwjuBJ8I8wQDAdUDoQjQAaEI9gEDAdQDnwipAZ8IrgEDAdMDnwh5nwh/AwHSA58IigGfCJQBAwHQA58I1QGfCKkEAwHPA7MI5wGzCOsBAwHKA7MIbbMIeQMByAOzCNIBswjZAQMBxwO0COUBtAjpAQMBxQO0CG20CHcDAcMDtAjQAbQI1wEDAcIDtQhstQh9AwG/A7gIQ7gIcgMBvgO1CNUBtQjcAQMBvQPBCG7BCHQDAbsDxAhuxAhzAwG6A7wI6QG8CPYBAwG4A7wIW7wIbAMBtgPPCFXPCFkDAbQDzwi/Ac8IxgEDAbMDzwiyAc8IuQEDAbID0AjqAdAI7gEDAbAD0Ahu0Ah7AwGuA9AI1QHQCNwBAwGtA9EIqAHRCKwBAwGrA9EItwHRCL4BAwGqA9II6AHSCOwBAwGoA9IIbdIIeQMBpgPSCNIB0gjaAQMBpQPcCD/cCO0BAwGfA90IP90I6AEDAZoD3gg/5QhIAwGWA+YIP+wITgMBkQPtCD/0CEgDAY0D9Qg/lAlPAwH4ApUJP5sJUwMB8wKcCT+jCUgDAe8CpAk/pAn2AQMB7AKlCT+lCdcBAwHoAqYJP6YJ+gEDAeMCpwk/rQlTAwHeAq4JP64J0wEDAdkCrwk/8AlKAwGsAvIJbfIJfAMBqQL1CUP1CXIDAagC8gnUAfIJ4QEDAacC/gls/gmJAgMBpQL7CW37CXoDAaMCgQqoAYEKrAEDAaECgQq3AYEKxAEDAaACggpVggpZAwGeAoIKxQGCCtIBAwGdAoIKsgGCCr8BAwGcAoMK8gGDCvYBAwGaAoMKboMKfQMBmAKDCtcBgwrkAQMBlwKECmyECnsDAZQChwpDhwpyAwGTAoQK0wGECuABAwGSApMKP+4KSgMBwQGKC1uKC18DAasBigvGAYoLzAEDAaoBigu4AYoLwAEDAakBiwtbiwtfAwGnAYsLxgGLC9MBAwGmAYsLuAGLC8ABAwGlAZALW5ALXwMBogGQC8YBkAvMAQMBoQGQC7gBkAvAAQMBoAGRC1uRC18DAZ4BkQvGAZEL8wEDAZ0BkQu4AZELwAEDAZwBmAtbmAtfAwGNAZgLxgGYC84BAwGMAZgLuAGYC8ABAwGLAZkLW5kLXwMBiQGZC8YBmQvTAQMBiAGZC7gBmQvAAQMBhwGeC1ueC18DAYQBngvGAZ4LzgEDAYMBngu4AZ4LwAEDAYIBnwtbnwtfAwGAAZ8LxgGfC/MBAgF/nwu4AZ8LwAECAX6oC0eoC9MBAgFkqQtHqQvaAQIBYK4LR64L0wECAVuvC0evC/oBAgFXtwtTtwvDBAIBLrkLSbwLVAIBQr8LScILVAIBOccLU8cL8AQCAQ/JC0nMC1QCASTPC0nSC1QCARuPAz+PA0MDAZwJjwOoAY8DrgEDAZsJjwOaAY8DogEDAZoJkAM/kANDAwGYCZADqAGQA7YBAwGWCZADmgGQA6IBAwGVCZEDP5EDQwMBkwmRA6gBkQO3AQMBkgmRA5oBkQOiAQMBkQmSAz+SA0MDAY8JkgOoAZIDtgEDAY4JkgOaAZIDogEDAY0JkwM/kwNDAwGLCZMDqAGTA7YBAwGKCZMDmgGTA6IBAwGJCZQDP5QDQwMBhwmUA6gBlAO1AQMBhgmUA5oBlAOiAQMBhQmVAz+VA0MDAYMJlQOoAZUDuAEDAYIJlQOaAZUDogEDAYEJmAM/mANDAwH+CJgDqQGYA60BAwH9CJgDmwGYA6MBAwH8CJkDP5kDQwMB+giZA6kBmQOvAQMB+QiZA5sBmQOjAQMB+AiaAz+aA0MDAfYImgOpAZoDrQEDAfUImgObAZoDowEDAfQImwM/mwNDAwHyCJsDqQGbA68BAwHxCJsDmwGbA6MBAwHwCJwDP5wDQwMB7gicA6kBnAOxAQMB7QicA5sBnAOjAQMB7AidAz+dA0MDAeoInQOpAZ0DrQEDAekInQObAZ0DowEDAegIngM/ngNDAwHmCJ4DqQGeA64BAwHlCJ4DmwGeA6MBAwHkCJ8DP58DQwMB4gifA6kBnwOxAQMB4QifA5sBnwOjAQMB4AigAz+gA0MDAd4IoAOpAaADtgEDAd0IoAObAaADowEDAdwIoQM/oQNDAwHaCKEDqQGhA7cBAwHZCKEDmwGhA6MBAwHYCKIDP6IDQwMB1giiA6kBogO2AQMB1QiiA5sBogOjAQMB1AijAz+jA0MDAdIIowOpAaMDtgEDAdEIowObAaMDowEDAdAIpAM/pANDAwHOCKQDqQGkA7UBAwHNCKQDmwGkA6MBAwHMCKUDP6UDQwMBygilA6kBpQO4AQMByQilA5sBpQOjAQMByAiIBDWPBD4DAY8IkAQ1lwQ+AwGLCJgENaMEOgMBhQikBDWrBD4DAYAI8QXgAfEF5AEDAZ0H8QVm8QVwAwGbB/EFygHxBdIBAwGaB/IFTfIFUQMBmAfyBbcB8gXEAQMBlwfyBakB8gWxAQMBlgfzBU3zBVEDAZQH8wW3AfMFzgEDAZMH8wWpAfMFsQEDAZIH9AVl9AVwAwGPB/cFO/cFagMBjgf0BccB9AXPAQMBjQeLBuIBiwbmAQMBhweLBmiLBnIDAYUHiwbMAYsG1AEDAYQHjAZPjAZTAwGCB4wGuQGMBsYBAwGBB4wGqwGMBrMBAwGAB40GT40GUwMB/gaNBrkBjQbMAQMB/QaNBqsBjQazAQMB/AaOBmeOBnIDAfkGkQY9kQZsAwH4Bo4GyQGOBtEBAwH3BqIG4gGiBuYBAwHyBqIGaKIGcgMB8AaiBswBogbUAQMB7wajBk+jBlMDAe0Gowa5AaMGxgEDAewGowarAaMGswEDAesGpAZPpAZTAwHpBqQGuQGkBssBAwHoBqQGqwGkBrMBAwHnBqUGZ6UGcgMB5AaoBj2oBmwDAeMGpQbJAaUG0QEDAeIGwwdXwwdbAwH0BMMH1wHDB+QBAwHzBMMHtAHDB9EBAwHxBMQHV8QHWwMB7wTEB9cBxAfgAQMB7gTEB7QBxAfRAQMB7ATFB1fFB1sDAeoExQfXAcUH4AEDAekExQe0AcUH0QEDAecExgdXxgdbAwHlBMYH1wHGB98BAwHkBMYHtAHGB9EBAwHiBMcHV8cHWwMB4ATHB9cBxwfgAQMB3wTHB7QBxwfRAQMB3QTIB1fIB1sDAdsEyAfXAcgH3gEDAdoEyAe0AcgH0QEDAdgEyQdXyQdbAwHWBMkH1wHJB90BAwHVBMkHtAHJB9EBAwHTBMoHV8oHWwMB0QTKB9cBygfeAQMB0ATKB7QBygfRAQMBzgTLB1fLB1sDAcwEywfXAcsH3wEDAcsEywe0AcsH0QEDAckEzAdXzAdcAwHHBMwH2AHMB+ABAwHGBMwHtQHMB9IBAwHEBM0HV80HXAMBwgTNB9gBzQfgAQMBwQTNB7UBzQfSAQMBvwTOB1fOB1sDAb0EzgfXAc4H5AEDAbwEzge0Ac4H0QEDAboE3AdX3AdbAwG1BNwH1wHcB+IBAwG0BNwHtAHcB9EBAwGyBN0HV90HWwMBsATdB9cB3QfgAQMBrwTdB7QB3QfRAQMBrQTeB1feB1sDAasE3gfXAd4H3gEDAaoE3ge0Ad4H0QEDAagE3wdX3wdbAwGmBN8H1wHfB90BAwGlBN8HtAHfB9EBAwGjBOAHV+AHWwMBoQTgB9cB4AfeAQMBoATgB7QB4AfRAQMBngThB1fhB1sDAZwE4QfXAeEH3wEDAZsE4Qe0AeEH0QEDAZkE4gdX4gdbAwGXBOIH1wHiB98BAwGWBOIHtAHiB9EBAwGUBOMHV+MHWwMBkgTjB9cB4wffAQMBkQTjB7QB4wfRAQMBjwTkB1fkB1sDAY0E5AfXAeQH3QEDAYwE5Ae0AeQH0QEDAYoE5QdX5QdcAwGIBOUH2AHlB+ABAwGHBOUHtQHlB9IBAwGFBOYHV+YHXAMBgwTmB9gB5gffAQMBggTmB7UB5gfSAQMBgATnB1fnB1wDAf4D5wfYAecH3gEDAf0D5we1AecH0gEDAfsD3Ahu3Ah/AwGiA9wI0wHcCNcBAwGhA9wI4gHcCOoBAwGgA90Ibt0IewMBnQPdCM8B3QjTAQMBnAPdCN4B3QjlAQMBmwPjCHHjCKEBAwGZA+AIcuAIfgMBlwPqCG/qCHsDAZQD6whn6whoAwGTA+gIeegIkAEDAZID8ghx8gh9AwGPA+8Icu8IjAEDAY4D9Qhw9Qh9AwGLA/sIRZEJUAMB+QKVCW+VCX0DAfYCmAlFmAl0AwH1ApUJ1QGVCeIBAwH0AqEJbqEJigIDAfICnglvngl7AwHwAqQJqgGkCa4BAwHuAqQJuQGkCcYBAwHtAqUJV6UJWwMB6wKlCccBpQnUAQMB6gKlCbQBpQnBAQMB6QKmCfMBpgn3AQMB5wKmCXCmCX4DAeUCpgnYAaYJ5QEDAeQCpwlupwl8AwHhAqoJRaoJdAMB4AKnCdQBpwnhAQMB3wKuCcUBrgnQAQMB3AKuCV2uCWsDAdoCtwlBtwnvAQMB1AK4CUG4CeoBAwHPArkJQcAJSgMBywLBCUHHCVADAcYCyAlBzwlKAwHCAtAJQe8JUQMBrQKcCkGcCoQCAwGLAp0KQZ0KgAIDAYUCngpBpQpKAwGBAqYKQawKUAMB/AGtCkG0CkoDAfgBtQpB1ApRAwHiAdUKQdsKVQMB3AHcCkHjCkoDAdgB5ApB5AqNAgMB1AHlCkHlCoMCAwHOAeYKQeYKkgIDAcgB5wpB7QpVAwHCAagLX6gLYwIBZ6gLygGoC9ABAgFmqAu8AagLxAECAWWpC1+pC2MCAWOpC8oBqQvXAQIBYqkLvAGpC8QBAgFhrgtfrgtjAgFergvKAa4L0AECAV2uC7wBrgvEAQIBXK8LX68LYwIBWq8LygGvC/cBAgFZrwu8Aa8LxAECAVi6C0u6C9cBAgFHuwtLuwveAQIBQ8ALS8AL1wECAT7BC0vBC/4BAgE6ygtLygvXAQIBKcsLS8sL3gECASXQC0vQC9cBAgEg0QtL0Qv+AQIBHI0EZ40EkwEDAZIIigRoigRyAwGQCJUEZ5UEkgEDAY4IkgRokgRyAwGMCJgEQ5gEYQMBhgiaBDmhBEIDAYcIqQRfqQRwAwGDCKYEYKYEbQMBgQj8CEeDCVADAYcDhAlHkAlMAwH6ArcJcLcJgQEDAdcCtwnVAbcJ2QEDAdYCtwnkAbcJ7AEDAdUCuAlwuAl9AwHSArgJ0QG4CdUBAwHRArgJ4AG4CecBAwHQAr4Jc74JowEDAc4Cuwl0uwmAAQMBzALFCXHFCX0DAckCxglpxglqAwHIAsMJe8MJkgEDAccCzQlzzQl/AwHEAsoJdMoJjgEDAcMC0Aly0Al/AwHAAtYJR+wJUgMBrgKcCnCcCoEBAwGPApwK1QGcCtkBAwGOApwK5AGcCoECAwGMAp0KcJ0KfQMBiQKdCtEBnQrVAQMBiAKdCuABnQr9AQMBhgKjCnOjCqMBAwGEAqAKdKAKgAEDAYICqgpxqgp9AwH/AasKaasKagMB/gGoCnuoCpIBAwH9AbIKc7IKfwMB+gGvCnSvCo4BAwH5AbUKcrUKfwMB9gG7CkfRClIDAeMB1Qpx1QqAAQMB4AHYCkfYCnYDAd8B1QrYAdUK+gEDAd0B4Qpw4QqNAgMB2wHeCnHeCn4DAdkB5AqsAeQKsAEDAdcB5Aq7AeQK3QEDAdUB5QpZ5QpdAwHTAeUK3gHlCoACAwHRAeUKtgHlCtgBAwHPAeYKiwLmCo8CAwHNAeYKcuYKgQEDAcsB5grbAeYK/QEDAckB5wpw5wp/AwHGAeoKR+oKdgMBxQHnCtcB5wr5AQMBwwG6C2O6C2cCAUq6C84BugvUAQIBSboLwAG6C8gBAgFIuwtjuwtnAgFGuwvOAbsL2wECAUW7C8ABuwvIAQIBRMALY8ALZwIBQcALzgHAC9QBAgFAwAvAAcALyAECAT/BC2PBC2cCAT3BC84BwQv7AQIBPMELwAHBC8gBAgE7ygtjygtnAgEsygvOAcoL1AECASvKC8ABygvIAQIBKssLY8sLZwIBKMsLzgHLC9sBAgEnywvAAcsLyAECASbQC2PQC2cCASPQC84B0AvUAQIBItALwAHQC8gBAgEh0Qtj0QtnAgEf0QvOAdEL+wECAR7RC8AB0QvIAQIBHZ8EZZ8EaQMBigicBGacBG0DAYgIgQlxgQmQAQMBigP+CHL+CHkDAYgDhAlVhAmDAQMB+wKGCUuJCVYDAf8CjAlLjglWAwH8AtcJSd4JUgMBvALfCUnrCU4DAa8CvApJwwpSAwHyAcQKSdAKTgMB5AGHCU2HCecBAwGFA4gJTYgJoQIDAYADjQlNjQnsAQMB/QLcCXPcCZIBAwG/AtkJdNkJewMBvQLfCVffCYUBAwGwAuEJTeQJWAMBtALnCU3pCVgDAbECwQpzwQqSAQMB9QG+CnS+CnsDAfMBxApXxAqFAQMB5QHGCk3JClgDAekBzApNzgpYAwHmAYcJpAGHCeQBAwGGA4gJZYgJhwEDAYMDiAnzAYgJngIDAYIDiAngAYgJ7QEDAYEDjQmkAY0J6QEDAf4C4glP4gnpAQMBugLjCU/jCaMCAwG1AugJT+gJ7gEDAbICxwpPxwrpAQMB8AHICk/ICrgCAwHqAc0KT80K7gEDAecB4gmmAeIJ5gEDAbsC4wln4wmJAQMBuALjCfUB4wmgAgMBtwLjCeIB4wnvAQMBtgLoCaYB6AnrAQMBswLHCqYBxwrmAQMB8QHICmfICokBAwHuAcgKigLICrUCAwHtAcgK4gHICoQCAwHrAc0KpgHNCusBAwHoAQ==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="OpenBrowser_2" sap:VirtualizedContainerService.HintSize="414,114">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="418,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InputDialog_3" sap:VirtualizedContainerService.HintSize="314,92" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="CreateDirectory_4" sap:VirtualizedContainerService.HintSize="314,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InputDialog_4" sap:VirtualizedContainerService.HintSize="314,92" />
      <sap2010:ViewStateData Id="MessageBox_29" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="336,609">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MessageBox_15" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="GetValue_31" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="336,291">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TypeInto_5" sap:VirtualizedContainerService.HintSize="336,134" />
      <sap2010:ViewStateData Id="TypeInto_6" sap:VirtualizedContainerService.HintSize="336,134" />
      <sap2010:ViewStateData Id="Click_8" sap:VirtualizedContainerService.HintSize="336,106" />
      <sap2010:ViewStateData Id="Click_9" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_10" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="336,376">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="358,994">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="380,1118">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MessageBox_21" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="400,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="200,52" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">9,180</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">130,180 130,100 150,100</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GoogleOCR_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="GetOCRText_2" sap:VirtualizedContainerService.HintSize="314,168">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetValue_14" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_15" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_16" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_17" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_18" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_19" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_20" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_21" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_22" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_23" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_24" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_8" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="314,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_45" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_46" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_47" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_48" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_49" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_50" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_51" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_31" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_32" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_33" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_34" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_35" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_36" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_37" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="314,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="336,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="358,590">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_3" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="560,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="560,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="512,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="486,632">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="512,790" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="512,60" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="534,1114">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="560,1272" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_54" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_55" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_4" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_53" sap:VirtualizedContainerService.HintSize="336,437">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_10" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_41">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,444</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_52" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_53" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_5" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_52" sap:VirtualizedContainerService.HintSize="336,437">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_9" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_40">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">410,404</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="81,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">269.5,406.5</av:Point>
            <av:Size x:Key="ShapeSize">81,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">269.5,450 239.5,450 239.5,470 200,470</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">350.5,450 380.5,450 380.5,430 410,430</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_24">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,264</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,316 100,346 310,346 310,406.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_56" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_11" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_42">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,254</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="81,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">219.5,256.5</av:Point>
            <av:Size x:Key="ShapeSize">81,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">219.5,300 200,300 200,290</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">300.5,300 330.5,300 330.5,280 370,280</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_26">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">150,144</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">250,196 250,226 260,226 260,256.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">250,12.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">280,87.5 280,117.5 250,117.5 250,144</av:PointCollection>
            <x:Double x:Key="Width">610</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_13" sap:VirtualizedContainerService.HintSize="366,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_72" sap:VirtualizedContainerService.HintSize="366,87" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="GetRowItem_1" sap:VirtualizedContainerService.HintSize="314,64" />
      <sap2010:ViewStateData Id="GetRowItem_2" sap:VirtualizedContainerService.HintSize="314,64" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_71" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="336,619">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="366,767" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_20" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Click_11" sap:VirtualizedContainerService.HintSize="1473,106" />
      <sap2010:ViewStateData Id="GetValue_3" sap:VirtualizedContainerService.HintSize="1473,106" />
      <sap2010:ViewStateData Id="ExcelWriteRange_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_57" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_58" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_6" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="336,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_12" sap:VirtualizedContainerService.HintSize="467,673" />
      <sap2010:ViewStateData Id="Sequence_56" sap:VirtualizedContainerService.HintSize="489,797">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteRange_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_59" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_60" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_7" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_57" sap:VirtualizedContainerService.HintSize="336,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_13" sap:VirtualizedContainerService.HintSize="467,673" />
      <sap2010:ViewStateData Id="ExcelWriteRange_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_61" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_62" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_8" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="336,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_14" sap:VirtualizedContainerService.HintSize="467,673" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="959,823" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="1473,973" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteRange_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_63" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_64" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_9" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="336,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_15" sap:VirtualizedContainerService.HintSize="467,673" />
      <sap2010:ViewStateData Id="ExcelWriteRange_14" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_65" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_66" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_10" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="336,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_16" sap:VirtualizedContainerService.HintSize="467,673" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="959,823" />
      <sap2010:ViewStateData Id="Sequence_61" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetValue_25" sap:VirtualizedContainerService.HintSize="1368,106" />
      <sap2010:ViewStateData Id="ExcelWriteCell_74" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_75" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_76" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_78" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_79" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_80" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_81" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_82" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_83" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_84" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_85" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_75" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_91" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_92" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_93" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_94" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_95" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_96" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_97" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_98" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_99" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_100" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_101" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_102" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_103" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_104" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_105" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_106" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_107" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_108" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_109" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="222,268">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_22" sap:VirtualizedContainerService.HintSize="1368,377" />
      <sap2010:ViewStateData Id="ExcelWriteCell_113" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_114" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_115" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_116" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_117" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_118" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_119" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_120" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_121" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_122" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_23" sap:VirtualizedContainerService.HintSize="440,161" />
      <sap2010:ViewStateData Id="ExcelWriteCell_123" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_124" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_125" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_126" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_127" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_128" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_129" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_130" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_131" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_132" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_133" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_134" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_24" sap:VirtualizedContainerService.HintSize="438,161" />
      <sap2010:ViewStateData Id="ExcelWriteCell_135" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_136" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_137" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_138" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_139" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_140" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_141" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_142" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_143" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_144" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_145" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_146" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_80" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_25" sap:VirtualizedContainerService.HintSize="440,161" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="903,311" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="1368,461" />
      <sap2010:ViewStateData Id="Sequence_81" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExtractData_7" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="ExtractData_8" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_12" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="ExtractData_9" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="ExtractData_10" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_7" sap:VirtualizedContainerService.HintSize="727,198" />
      <sap2010:ViewStateData Id="ExcelWriteRange_6" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="ExcelWriteRange_7" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_14" sap:VirtualizedContainerService.HintSize="691,59" />
      <sap2010:ViewStateData Id="FilterDataTable_1" sap:VirtualizedContainerService.HintSize="691,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_147" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="ExcelWriteRange_21" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="ExcelDeleteRange_1" sap:VirtualizedContainerService.HintSize="691,22" />
      <sap2010:ViewStateData Id="ExcelWriteRange_8" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_15" sap:VirtualizedContainerService.HintSize="669,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_16" sap:VirtualizedContainerService.HintSize="669,59" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="669,60" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="669,134" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="669,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="595,60" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="ExcelWriteCell_148" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_88" sap:VirtualizedContainerService.HintSize="336,313">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="212,62" />
      <sap2010:ViewStateData Id="Sequence_89" sap:VirtualizedContainerService.HintSize="234,186">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="595,462" />
      <sap2010:ViewStateData Id="Sequence_90" sap:VirtualizedContainerService.HintSize="617,686">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_5" sap:VirtualizedContainerService.HintSize="669,834" />
      <sap2010:ViewStateData Id="ExcelReadRange_20" sap:VirtualizedContainerService.HintSize="669,59" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="669,60" />
      <sap2010:ViewStateData Id="ExcelDeleteRange_3" sap:VirtualizedContainerService.HintSize="669,22" />
      <sap2010:ViewStateData Id="ExcelWriteCell_224" sap:VirtualizedContainerService.HintSize="669,87" />
      <sap2010:ViewStateData Id="ExcelWriteRange_23" sap:VirtualizedContainerService.HintSize="669,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_29" sap:VirtualizedContainerService.HintSize="669,59" />
      <sap2010:ViewStateData Id="OutputDataTable_6" sap:VirtualizedContainerService.HintSize="669,22" />
      <sap2010:ViewStateData Id="ExcelReadRange_18" sap:VirtualizedContainerService.HintSize="647,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_19" sap:VirtualizedContainerService.HintSize="647,59" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="647,60" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="647,134" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="647,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="595,60" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="ExcelWriteCell_223" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_99" sap:VirtualizedContainerService.HintSize="336,313">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="212,62" />
      <sap2010:ViewStateData Id="Sequence_100" sap:VirtualizedContainerService.HintSize="234,186">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="595,462" />
      <sap2010:ViewStateData Id="Sequence_101" sap:VirtualizedContainerService.HintSize="617,686">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_6" sap:VirtualizedContainerService.HintSize="647,834" />
      <sap2010:ViewStateData Id="Sequence_102" sap:VirtualizedContainerService.HintSize="669,1530">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_91" sap:VirtualizedContainerService.HintSize="691,3776">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_17" sap:VirtualizedContainerService.HintSize="691,59" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="691,60" />
      <sap2010:ViewStateData Id="ExcelDeleteRange_2" sap:VirtualizedContainerService.HintSize="691,22" />
      <sap2010:ViewStateData Id="ExcelWriteCell_222" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="ExcelWriteRange_22" sap:VirtualizedContainerService.HintSize="691,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_30" sap:VirtualizedContainerService.HintSize="691,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_24" sap:VirtualizedContainerService.HintSize="647,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_25" sap:VirtualizedContainerService.HintSize="647,59" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="647,60" />
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="647,134" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="647,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="595,60" />
      <sap2010:ViewStateData Id="WriteLine_7" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="ExcelWriteCell_227" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_106" sap:VirtualizedContainerService.HintSize="336,313">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_8" sap:VirtualizedContainerService.HintSize="212,62" />
      <sap2010:ViewStateData Id="Sequence_107" sap:VirtualizedContainerService.HintSize="234,186">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="595,462" />
      <sap2010:ViewStateData Id="Sequence_108" sap:VirtualizedContainerService.HintSize="617,686">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_8" sap:VirtualizedContainerService.HintSize="647,834" />
      <sap2010:ViewStateData Id="ExcelReadRange_26" sap:VirtualizedContainerService.HintSize="647,59" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="647,60" />
      <sap2010:ViewStateData Id="ExcelDeleteRange_5" sap:VirtualizedContainerService.HintSize="647,22" />
      <sap2010:ViewStateData Id="ExcelWriteCell_228" sap:VirtualizedContainerService.HintSize="647,87" />
      <sap2010:ViewStateData Id="ExcelWriteRange_25" sap:VirtualizedContainerService.HintSize="647,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_27" sap:VirtualizedContainerService.HintSize="647,59" />
      <sap2010:ViewStateData Id="Sequence_109" sap:VirtualizedContainerService.HintSize="669,2144">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_110" sap:VirtualizedContainerService.HintSize="691,2268">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="713,7717">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_8" sap:VirtualizedContainerService.HintSize="727,7826" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="749,8188">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_51" sap:VirtualizedContainerService.HintSize="771,8312">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="OutputDataTable_2" sap:VirtualizedContainerService.HintSize="2141,22" />
      <sap2010:ViewStateData Id="OutputDataTable_3" sap:VirtualizedContainerService.HintSize="2141,22" />
      <sap2010:ViewStateData Id="OutputDataTable_4" sap:VirtualizedContainerService.HintSize="2141,22" />
      <sap2010:ViewStateData Id="ExcelWriteCell_259" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_260" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_128" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_237" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_238" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_117" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="2141,487" />
      <sap2010:ViewStateData Id="ExcelWriteCell_261" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_262" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_129" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_245" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_246" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_121" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_27" sap:VirtualizedContainerService.HintSize="2141,487" />
      <sap2010:ViewStateData Id="ExcelWriteCell_247" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_248" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_122" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_249" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_250" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_123" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_28" sap:VirtualizedContainerService.HintSize="697,487" />
      <sap2010:ViewStateData Id="ExcelWriteCell_251" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_252" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_124" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_253" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_254" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_125" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_29" sap:VirtualizedContainerService.HintSize="697,487" />
      <sap2010:ViewStateData Id="ExcelWriteCell_255" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_256" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_126" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_257" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_258" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_127" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_30" sap:VirtualizedContainerService.HintSize="697,487" />
      <sap2010:ViewStateData Id="If_31" sap:VirtualizedContainerService.HintSize="1419,636" />
      <sap2010:ViewStateData Id="If_32" sap:VirtualizedContainerService.HintSize="2141,785" />
      <sap2010:ViewStateData Id="Sequence_112" sap:VirtualizedContainerService.HintSize="2163,2149">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_31" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_67">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">570,954.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_33">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">600,864.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">700,915.5 700,945.5 670,945.5 670,954.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">600,784.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">700,835.5 700,864.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_43">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">600,704.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">700,755.5 700,784.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">600,614.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">700,665.5 700,704.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_50">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">600,524.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">700,575.5 700,614.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">600,444.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">700,495.5 700,524.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">600,344.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">700,395.5 700,444.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="81,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">379.5,266.5</av:Point>
            <av:Size x:Key="ShapeSize">81,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">379.5,310 130,310 130,240</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">460.5,310 700,310 700,344.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">320,144.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">420,195.5 420,266.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">150,74.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">350,100 420,100 420,144.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">370,34.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">370,60 250,60 250,74.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="1142,106" />
      <sap2010:ViewStateData Id="GetValue_2" sap:VirtualizedContainerService.HintSize="1142,106" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="MessageBox_4" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="MessageBox_5" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="653,208" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1142,356" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,724.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StartProcess_1" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">90,584</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_2" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">60,484.02</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CloseApplication_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="SendHotkey_1" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="TypeInto_7" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="MessageBox_34" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_63" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_45">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">60,644.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InputDialog_5" sap:VirtualizedContainerService.HintSize="436,92" />
      <sap2010:ViewStateData Id="ExtractData_11" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="ExtractData_12" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Click_13" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="ExtractData_13" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="ExtractData_14" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_8" sap:VirtualizedContainerService.HintSize="414,197" />
      <sap2010:ViewStateData Id="ExcelWriteRange_16" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteRange_17" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteRange_18" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteRange_19" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_11" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_69" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="314,331" />
      <sap2010:ViewStateData Id="ExcelWriteRange_20" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="336,1189">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_18" sap:VirtualizedContainerService.HintSize="414,1298" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="436,1659">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_67" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_47">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,764.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AssertUnitTest_1" sap:VirtualizedContainerService.HintSize="308,64">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_48">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">6,408</av:Point>
            <av:Size x:Key="ShapeSize">308,64</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetValue_29" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MessageBox_38" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_57">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">830,454.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_58">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">810,394.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">910,445.5 930,445.5 930,454.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetValue_32" sap:VirtualizedContainerService.HintSize="1364,106" />
      <sap2010:ViewStateData Id="ExcelWriteCell_149" sap:VirtualizedContainerService.HintSize="314,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_150" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_151" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_152" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_153" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_154" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_155" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_156" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_157" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_158" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_159" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_160" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_161" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_162" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_163" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_164" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_165" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_92" sap:VirtualizedContainerService.HintSize="336,2208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_166" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_167" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_168" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_169" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_170" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_171" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_172" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_173" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_174" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_175" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_176" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_177" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_178" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_179" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_180" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_181" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_182" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_183" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_184" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_185" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_186" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_187" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_93" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_94" sap:VirtualizedContainerService.HintSize="358,2423">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_26" sap:VirtualizedContainerService.HintSize="1364,2532" />
      <sap2010:ViewStateData Id="ExcelWriteCell_188" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_189" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_190" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_191" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_192" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_193" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_194" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_195" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_196" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_197" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_95" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_27" sap:VirtualizedContainerService.HintSize="439,160" />
      <sap2010:ViewStateData Id="ExcelWriteCell_198" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_199" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_200" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_201" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_202" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_203" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_204" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_205" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_206" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_207" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_208" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_209" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_96" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_28" sap:VirtualizedContainerService.HintSize="436,160" />
      <sap2010:ViewStateData Id="ExcelWriteCell_210" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_211" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_212" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_213" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_214" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_215" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_216" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_217" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_218" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_219" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_220" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_221" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_97" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_29" sap:VirtualizedContainerService.HintSize="439,160" />
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="900,308" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="1364,456" />
      <sap2010:ViewStateData Id="Sequence_98" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_65">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">230,854.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">710,845.5 710,874.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_28" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="OutputDataTable_1" sap:VirtualizedContainerService.HintSize="653,22" />
      <sap2010:ViewStateData Id="MessageBox_41" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="MessageBox_39" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="MessageBox_40" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="653,209" />
      <sap2010:ViewStateData Id="Sequence_111" sap:VirtualizedContainerService.HintSize="675,593">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_30" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_66">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,914.5</av:Point>
            <av:Size x:Key="ShapeSize">200,52</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1048,1072">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">630,22.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">630,60 570,60</av:PointCollection>
            <x:Double x:Key="Width">1034</x:Double>
            <x:Double x:Key="Height">1036.02</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="1088,1192" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>